

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Oct 11 19:20:43 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38  0000                     
    39                           ; Version 1.41
    40                           ; Generated 25/01/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  0010FC                     __pidataCOMRAM:
    76                           	opt stack 0
    77                           
    78                           ;initializer for Reloj_Calendario@Date
    79  0010FC  44                 	db	68
    80  0010FD  41                 	db	65
    81  0010FE  54                 	db	84
    82  0010FF  45                 	db	69
    83  001100  3A                 	db	58
    84  001101  20                 	db	32
    85  001102  30                 	db	48
    86  001103  30                 	db	48
    87  001104  2F                 	db	47
    88  001105  30                 	db	48
    89  001106  30                 	db	48
    90  001107  2F                 	db	47
    91  001108  32                 	db	50
    92  001109  30                 	db	48
    93  00110A  30                 	db	48
    94  00110B  30                 	db	48
    95  00110C  00                 	db	0
    96                           
    97                           ;initializer for Reloj_Calendario@Time
    98  00110D  54                 	db	84
    99  00110E  49                 	db	73
   100  00110F  4D                 	db	77
   101  001110  45                 	db	69
   102  001111  3A                 	db	58
   103  001112  20                 	db	32
   104  001113  30                 	db	48
   105  001114  30                 	db	48
   106  001115  3A                 	db	58
   107  001116  30                 	db	48
   108  001117  30                 	db	48
   109  001118  3A                 	db	58
   110  001119  30                 	db	48
   111  00111A  30                 	db	48
   112  00111B  00                 	db	0
   113  0000                     _SSPBUF	set	4041
   114  0000                     _PIR1bits	set	3998
   115  0000                     _SSPCON2bits	set	4037
   116  0000                     _SSPADD	set	4040
   117  0000                     _SSPCON2	set	4037
   118  0000                     _SSPCON1bits	set	4038
   119  0000                     _SSPSTATbits	set	4039
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISA	set	3986
   122  0000                     _ADCON1	set	4033
   123  0000                     _OSCCON	set	4051
   124  0000                     _PORTAbits	set	3968
   125  0000                     _TRISDbits	set	3989
   126  0000                     _LATDbits	set	3980
   127                           
   128                           	psect	smallconst
   129  000800                     __psmallconst:
   130                           	opt stack 0
   131  000800  00                 	db	0
   132  000801                     STR_1:
   133  000801  20                 	db	32
   134  000802  20                 	db	32
   135  000803  00                 	db	0
   136                           
   137                           ; #config settings
   138  000804  00                 	db	0	; dummy byte at the end
   139  0000                     
   140                           	psect	cinit
   141  001030                     __pcinit:
   142                           	opt stack 0
   143  001030                     start_initialization:
   144                           	opt stack 0
   145  001030                     __initialization:
   146                           	opt stack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (32 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150  001030  0EFC               	movlw	low __pidataCOMRAM
   151  001032  6EF6               	movwf	tblptrl,c
   152  001034  0E10               	movlw	high __pidataCOMRAM
   153  001036  6EF7               	movwf	tblptrh,c
   154  001038  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155  00103A  6EF8               	movwf	tblptru,c
   156  00103C  EE00  F001         	lfsr	0,__pdataCOMRAM
   157  001040  EE10 F020          	lfsr	1,32
   158  001044                     copy_data0:
   159  001044  0009               	tblrd		*+
   160  001046  CFF5 FFEE          	movff	tablat,postinc0
   161  00104A  50E5               	movf	postdec1,w,c
   162  00104C  50E1               	movf	fsr1l,w,c
   163  00104E  E1FA               	bnz	copy_data0
   164                           
   165                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   166  001050  6A3E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   167                           
   168                           ; Clear objects allocated to COMRAM (7 bytes)
   169  001052  EE00  F037         	lfsr	0,__pbssCOMRAM
   170  001056  0E07               	movlw	7
   171  001058                     clear_0:
   172  001058  6AEE               	clrf	postinc0,c
   173  00105A  06E8               	decf	wreg,f,c
   174  00105C  E1FD               	bnz	clear_0
   175  00105E                     end_of_initialization:
   176                           	opt stack 0
   177  00105E                     __end_of__initialization:
   178                           	opt stack 0
   179  00105E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   180  001060  6EF8               	movwf	tblptru,c
   181  001062  0100               	movlb	0
   182  001064  EFC2  F004         	goto	_main	;jump to C main() function
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192                           	psect	bitbssCOMRAM
   193  0001F0                     __pbitbssCOMRAM:
   194                           	opt stack 0
   195  0001F0                     _RS:
   196                           	opt stack 0
   197  0001F0                     	ds	1
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           postdec1	equ	0xFE5
   205                           fsr1l	equ	0xFE1
   206                           
   207                           	psect	bssCOMRAM
   208  000037                     __pbssCOMRAM:
   209                           	opt stack 0
   210  000037                     _i:
   211                           	opt stack 0
   212  000037                     	ds	1
   213  000038                     _day:
   214                           	opt stack 0
   215  000038                     	ds	1
   216  000039                     _month:
   217                           	opt stack 0
   218  000039                     	ds	1
   219  00003A                     _year:
   220                           	opt stack 0
   221  00003A                     	ds	1
   222  00003B                     _seconds:
   223                           	opt stack 0
   224  00003B                     	ds	1
   225  00003C                     _minutes:
   226                           	opt stack 0
   227  00003C                     	ds	1
   228  00003D                     _hours:
   229                           	opt stack 0
   230  00003D                     	ds	1
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	dataCOMRAM
   241  000001                     __pdataCOMRAM:
   242                           	opt stack 0
   243  000001                     Reloj_Calendario@Date:
   244                           	opt stack 0
   245  000001                     	ds	17
   246  000012                     Reloj_Calendario@Time:
   247                           	opt stack 0
   248  000012                     	ds	15
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           postdec1	equ	0xFE5
   256                           fsr1l	equ	0xFE1
   257                           
   258                           	psect	cstackCOMRAM
   259  000021                     __pcstackCOMRAM:
   260                           	opt stack 0
   261  000021                     ??_LCD_Write_Nibble:
   262  000021                     ??_Anti_rebote:
   263  000021                     ??_BCD_a_Decimal:
   264  000021                     ?___awdiv:
   265                           	opt stack 0
   266  000021                     ?___awmod:
   267                           	opt stack 0
   268  000021                     ?___lldiv:
   269                           	opt stack 0
   270  000021                     Parpadeo@j:
   271                           	opt stack 0
   272  000021                     I2C_Write@data:
   273                           	opt stack 0
   274  000021                     ___awdiv@dividend:
   275                           	opt stack 0
   276  000021                     ___awmod@dividend:
   277                           	opt stack 0
   278  000021                     ___lldiv@dividend:
   279                           	opt stack 0
   280                           
   281                           ; 4 bytes @ 0x0
   282  000021                     	ds	1
   283  000022                     LCD_Write_Nibble@n:
   284                           	opt stack 0
   285  000022                     Anti_rebote@contador:
   286                           	opt stack 0
   287  000022                     BCD_a_Decimal@numero:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x1
   291  000022                     	ds	1
   292  000023                     LCD_Cmd@Command:
   293                           	opt stack 0
   294  000023                     LCD_PutC@LCD_Char:
   295                           	opt stack 0
   296  000023                     Anti_rebote@i:
   297                           	opt stack 0
   298  000023                     LCD_Print@LCD_Str:
   299                           	opt stack 0
   300  000023                     ___awdiv@divisor:
   301                           	opt stack 0
   302  000023                     ___awmod@divisor:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x2
   306  000023                     	ds	1
   307  000024                     ??_LCD_Begin:
   308  000024                     LCD_Goto@row:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x3
   312  000024                     	ds	1
   313  000025                     ??_LCD_Print:
   314  000025                     LCD_Goto@col:
   315                           	opt stack 0
   316  000025                     ___awdiv@counter:
   317                           	opt stack 0
   318  000025                     ___awmod@counter:
   319                           	opt stack 0
   320  000025                     ___lldiv@divisor:
   321                           	opt stack 0
   322                           
   323                           ; 4 bytes @ 0x4
   324  000025                     	ds	1
   325  000026                     ___awdiv@sign:
   326                           	opt stack 0
   327  000026                     ___awmod@sign:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x5
   331  000026                     	ds	1
   332  000027                     ___awdiv@quotient:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x6
   336  000027                     	ds	1
   337  000028                     LCD_Print@i:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x7
   341  000028                     	ds	1
   342  000029                     ??_Decimal_a_BCD:
   343  000029                     Establecer_Hora_Fecha@y:
   344                           	opt stack 0
   345  000029                     ___lldiv@quotient:
   346                           	opt stack 0
   347                           
   348                           ; 4 bytes @ 0x8
   349  000029                     	ds	1
   350  00002A                     Establecer_Hora_Fecha@parametro:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x9
   354  00002A                     	ds	1
   355  00002B                     ??_Establecer_Hora_Fecha:
   356  00002B                     Decimal_a_BCD@numero:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0xA
   360  00002B                     	ds	1
   361  00002C                     Establecer_Hora_Fecha@x:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0xB
   365  00002C                     	ds	1
   366  00002D                     ___lldiv@counter:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0xC
   370  00002D                     	ds	1
   371  00002E                     I2C_Init@frecuencia:
   372                           	opt stack 0
   373                           
   374                           ; 4 bytes @ 0xD
   375  00002E                     	ds	4
   376  000032                     ??_I2C_Init:
   377                           
   378                           ; 1 bytes @ 0x11
   379  000032                     	ds	4
   380  000036                     ??_main:
   381                           
   382                           ; 1 bytes @ 0x15
   383  000036                     	ds	1
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1l	equ	0xFE1
   392                           
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 167 in file "RTC.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   412 ;;      Params:         0       0       0       0       0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0       0       0       0       0
   414 ;;      Temps:          1       0       0       0       0       0       0       0       0
   415 ;;      Totals:         1       0       0       0       0       0       0       0       0
   416 ;;Total ram usage:        1 bytes
   417 ;; Hardware stack levels required when called:    4
   418 ;; This function calls:
   419 ;;		_Anti_rebote
   420 ;;		_Decimal_a_BCD
   421 ;;		_Establecer_Hora_Fecha
   422 ;;		_I2C_Ack
   423 ;;		_I2C_Init
   424 ;;		_I2C_NO_Ack
   425 ;;		_I2C_ReStart
   426 ;;		_I2C_Read
   427 ;;		_I2C_Start
   428 ;;		_I2C_Stop
   429 ;;		_I2C_Write
   430 ;;		_LCD_Begin
   431 ;;		_Reloj_Calendario
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text0
   438  000984                     __ptext0:
   439                           	opt stack 0
   440  000984                     _main:
   441                           	opt stack 27
   442                           
   443                           ;RTC.c: 169: OSCCON = 0b01110010;
   444                           
   445                           ;incstack = 0
   446  000984  0E72               	movlw	114
   447  000986  6ED3               	movwf	4051,c	;volatile
   448                           
   449                           ;RTC.c: 170: ADCON1=0b00001111;
   450  000988  0E0F               	movlw	15
   451  00098A  6EC1               	movwf	4033,c	;volatile
   452                           
   453                           ;RTC.c: 171: TRISA=0b11;
   454  00098C  0E03               	movlw	3
   455  00098E  6E92               	movwf	3986,c	;volatile
   456                           
   457                           ;RTC.c: 172: I2C_Init(100000);
   458  000990  0EA0               	movlw	160
   459  000992  6E2E               	movwf	I2C_Init@frecuencia,c
   460  000994  0E86               	movlw	134
   461  000996  6E2F               	movwf	I2C_Init@frecuencia+1,c
   462  000998  0E01               	movlw	1
   463  00099A  6E30               	movwf	I2C_Init@frecuencia+2,c
   464  00099C  0E00               	movlw	0
   465  00099E  6E31               	movwf	I2C_Init@frecuencia+3,c
   466  0009A0  ECC7  F007         	call	_I2C_Init	;wreg free
   467                           
   468                           ;RTC.c: 173: LCD_Begin();
   469  0009A4  EC6C  F006         	call	_LCD_Begin	;wreg free
   470  0009A8                     l1518:
   471                           
   472                           ;RTC.c: 176: {
   473                           ;RTC.c: 177: if(!(PORTAbits.RA0))
   474  0009A8  B080               	btfsc	3968,0,c	;volatile
   475  0009AA  D06C               	goto	l1562
   476                           
   477                           ;RTC.c: 178: if(Anti_rebote())
   478  0009AC  EC4F  F008         	call	_Anti_rebote	;wreg free
   479  0009B0  A0D8               	btfss	status,0,c
   480  0009B2  D068               	goto	l1562
   481                           
   482                           ;RTC.c: 179: {
   483                           ;RTC.c: 180: i=0;
   484  0009B4  0E00               	movlw	0
   485  0009B6  6E37               	movwf	_i,c
   486                           
   487                           ;RTC.c: 181: hours = Establecer_Hora_Fecha(7,1,hours);
   488  0009B8  0E01               	movlw	1
   489  0009BA  6E29               	movwf	Establecer_Hora_Fecha@y,c
   490  0009BC  C03D  F02A         	movff	_hours,Establecer_Hora_Fecha@parametro
   491  0009C0  0E07               	movlw	7
   492  0009C2  EC7D  F005         	call	_Establecer_Hora_Fecha
   493  0009C6  6E3D               	movwf	_hours,c
   494                           
   495                           ;RTC.c: 182: minutes= Establecer_Hora_Fecha(10,1,minutes);
   496  0009C8  0E01               	movlw	1
   497  0009CA  6E29               	movwf	Establecer_Hora_Fecha@y,c
   498  0009CC  C03C  F02A         	movff	_minutes,Establecer_Hora_Fecha@parametro
   499  0009D0  0E0A               	movlw	10
   500  0009D2  EC7D  F005         	call	_Establecer_Hora_Fecha
   501  0009D6  6E3C               	movwf	_minutes,c
   502                           
   503                           ;RTC.c: 183: day = Establecer_Hora_Fecha(7,2,day);
   504  0009D8  0E02               	movlw	2
   505  0009DA  6E29               	movwf	Establecer_Hora_Fecha@y,c
   506  0009DC  C038  F02A         	movff	_day,Establecer_Hora_Fecha@parametro
   507  0009E0  0E07               	movlw	7
   508  0009E2  EC7D  F005         	call	_Establecer_Hora_Fecha
   509  0009E6  6E38               	movwf	_day,c
   510                           
   511                           ;RTC.c: 184: month = Establecer_Hora_Fecha(10,2,month);
   512  0009E8  0E02               	movlw	2
   513  0009EA  6E29               	movwf	Establecer_Hora_Fecha@y,c
   514  0009EC  C039  F02A         	movff	_month,Establecer_Hora_Fecha@parametro
   515  0009F0  0E0A               	movlw	10
   516  0009F2  EC7D  F005         	call	_Establecer_Hora_Fecha
   517  0009F6  6E39               	movwf	_month,c
   518                           
   519                           ;RTC.c: 185: year = Establecer_Hora_Fecha(15,2,year);
   520  0009F8  0E02               	movlw	2
   521  0009FA  6E29               	movwf	Establecer_Hora_Fecha@y,c
   522  0009FC  C03A  F02A         	movff	_year,Establecer_Hora_Fecha@parametro
   523  000A00  0E0F               	movlw	15
   524  000A02  EC7D  F005         	call	_Establecer_Hora_Fecha
   525  000A06  6E3A               	movwf	_year,c
   526  000A08                     l1534:
   527  000A08  EC4F  F008         	call	_Anti_rebote	;wreg free
   528  000A0C  B0D8               	btfsc	status,0,c
   529  000A0E  D7FC               	goto	l1534
   530                           
   531                           ;RTC.c: 187: minutes= Decimal_a_BCD(minutes);
   532  000A10  503C               	movf	_minutes,w,c
   533  000A12  EC34  F008         	call	_Decimal_a_BCD
   534  000A16  6E3C               	movwf	_minutes,c
   535                           
   536                           ;RTC.c: 188: hours = Decimal_a_BCD(hours);
   537  000A18  503D               	movf	_hours,w,c
   538  000A1A  EC34  F008         	call	_Decimal_a_BCD
   539  000A1E  6E3D               	movwf	_hours,c
   540                           
   541                           ;RTC.c: 189: day = Decimal_a_BCD(day);
   542  000A20  5038               	movf	_day,w,c
   543  000A22  EC34  F008         	call	_Decimal_a_BCD
   544  000A26  6E38               	movwf	_day,c
   545                           
   546                           ;RTC.c: 190: month = Decimal_a_BCD(month);
   547  000A28  5039               	movf	_month,w,c
   548  000A2A  EC34  F008         	call	_Decimal_a_BCD
   549  000A2E  6E39               	movwf	_month,c
   550                           
   551                           ;RTC.c: 191: year = Decimal_a_BCD(year);
   552  000A30  503A               	movf	_year,w,c
   553  000A32  EC34  F008         	call	_Decimal_a_BCD
   554  000A36  6E3A               	movwf	_year,c
   555                           
   556                           ;RTC.c: 193: I2C_Start();
   557  000A38  ECD0  F008         	call	_I2C_Start	;wreg free
   558                           
   559                           ;RTC.c: 194: I2C_Write(0xD0);
   560  000A3C  0ED0               	movlw	208
   561  000A3E  ECB3  F008         	call	_I2C_Write
   562                           
   563                           ;RTC.c: 195: I2C_Write(0x00);
   564  000A42  0E00               	movlw	0
   565  000A44  ECB3  F008         	call	_I2C_Write
   566                           
   567                           ;RTC.c: 196: I2C_Write(0x00);
   568  000A48  0E00               	movlw	0
   569  000A4A  ECB3  F008         	call	_I2C_Write
   570                           
   571                           ;RTC.c: 197: I2C_Write(minutes);
   572  000A4E  503C               	movf	_minutes,w,c
   573  000A50  ECB3  F008         	call	_I2C_Write
   574                           
   575                           ;RTC.c: 198: I2C_Write(hours);
   576  000A54  503D               	movf	_hours,w,c
   577  000A56  ECB3  F008         	call	_I2C_Write
   578                           
   579                           ;RTC.c: 199: I2C_Write(1);
   580  000A5A  0E01               	movlw	1
   581  000A5C  ECB3  F008         	call	_I2C_Write
   582                           
   583                           ;RTC.c: 200: I2C_Write(day);
   584  000A60  5038               	movf	_day,w,c
   585  000A62  ECB3  F008         	call	_I2C_Write
   586                           
   587                           ;RTC.c: 201: I2C_Write(month);
   588  000A66  5039               	movf	_month,w,c
   589  000A68  ECB3  F008         	call	_I2C_Write
   590                           
   591                           ;RTC.c: 202: I2C_Write(year);
   592  000A6C  503A               	movf	_year,w,c
   593  000A6E  ECB3  F008         	call	_I2C_Write
   594                           
   595                           ;RTC.c: 203: I2C_Stop();
   596  000A72  ECCC  F008         	call	_I2C_Stop	;wreg free
   597                           
   598                           ;RTC.c: 204: _delay((unsigned long)((200)*(800000/4000.0)));
   599  000A76  0E34               	movlw	52
   600  000A78  6E36               	movwf	??_main& (0+255),c
   601  000A7A  0EF2               	movlw	242
   602  000A7C                     u927:
   603  000A7C  2EE8               	decfsz	wreg,f,c
   604  000A7E  D7FE               	bra	u927
   605  000A80  2E36               	decfsz	??_main& (0+255),f,c
   606  000A82  D7FC               	bra	u927
   607  000A84                     l1562:
   608                           
   609                           ;RTC.c: 205: }
   610                           ;RTC.c: 207: I2C_Start();
   611  000A84  ECD0  F008         	call	_I2C_Start	;wreg free
   612                           
   613                           ;RTC.c: 208: I2C_Write(0xD0);
   614  000A88  0ED0               	movlw	208
   615  000A8A  ECB3  F008         	call	_I2C_Write
   616                           
   617                           ;RTC.c: 209: I2C_Write(0);
   618  000A8E  0E00               	movlw	0
   619  000A90  ECB3  F008         	call	_I2C_Write
   620                           
   621                           ;RTC.c: 210: I2C_ReStart();
   622  000A94  ECD4  F008         	call	_I2C_ReStart	;wreg free
   623                           
   624                           ;RTC.c: 211: I2C_Write(0xD1);
   625  000A98  0ED1               	movlw	209
   626  000A9A  ECB3  F008         	call	_I2C_Write
   627                           
   628                           ;RTC.c: 212: seconds=I2C_Read();
   629  000A9E  ECBA  F008         	call	_I2C_Read	;wreg free
   630  000AA2  6E3B               	movwf	_seconds,c
   631                           
   632                           ;RTC.c: 213: I2C_Ack();
   633  000AA4  ECC6  F008         	call	_I2C_Ack	;wreg free
   634                           
   635                           ;RTC.c: 214: minutes=I2C_Read();
   636  000AA8  ECBA  F008         	call	_I2C_Read	;wreg free
   637  000AAC  6E3C               	movwf	_minutes,c
   638                           
   639                           ;RTC.c: 215: I2C_Ack();
   640  000AAE  ECC6  F008         	call	_I2C_Ack	;wreg free
   641                           
   642                           ;RTC.c: 216: hours=I2C_Read();
   643  000AB2  ECBA  F008         	call	_I2C_Read	;wreg free
   644  000AB6  6E3D               	movwf	_hours,c
   645                           
   646                           ;RTC.c: 217: I2C_Ack();
   647  000AB8  ECC6  F008         	call	_I2C_Ack	;wreg free
   648                           
   649                           ;RTC.c: 218: I2C_Read();
   650  000ABC  ECBA  F008         	call	_I2C_Read	;wreg free
   651                           
   652                           ;RTC.c: 219: I2C_Ack();
   653  000AC0  ECC6  F008         	call	_I2C_Ack	;wreg free
   654                           
   655                           ;RTC.c: 220: day=I2C_Read();
   656  000AC4  ECBA  F008         	call	_I2C_Read	;wreg free
   657  000AC8  6E38               	movwf	_day,c
   658                           
   659                           ;RTC.c: 221: I2C_Ack();
   660  000ACA  ECC6  F008         	call	_I2C_Ack	;wreg free
   661                           
   662                           ;RTC.c: 222: month=I2C_Read();
   663  000ACE  ECBA  F008         	call	_I2C_Read	;wreg free
   664  000AD2  6E39               	movwf	_month,c
   665                           
   666                           ;RTC.c: 223: I2C_Ack();
   667  000AD4  ECC6  F008         	call	_I2C_Ack	;wreg free
   668                           
   669                           ;RTC.c: 224: year=I2C_Read();
   670  000AD8  ECBA  F008         	call	_I2C_Read	;wreg free
   671  000ADC  6E3A               	movwf	_year,c
   672                           
   673                           ;RTC.c: 225: I2C_NO_Ack();
   674  000ADE  ECC0  F008         	call	_I2C_NO_Ack	;wreg free
   675                           
   676                           ;RTC.c: 226: I2C_Stop();
   677  000AE2  ECCC  F008         	call	_I2C_Stop	;wreg free
   678                           
   679                           ;RTC.c: 228: Reloj_Calendario();
   680  000AE6  EC03  F004         	call	_Reloj_Calendario	;wreg free
   681                           
   682                           ;RTC.c: 229: _delay((unsigned long)((50)*(800000/4000.0)));
   683  000AEA  0E0D               	movlw	13
   684  000AEC  6E36               	movwf	??_main& (0+255),c
   685  000AEE  0EFC               	movlw	252
   686  000AF0                     u937:
   687  000AF0  2EE8               	decfsz	wreg,f,c
   688  000AF2  D7FE               	bra	u937
   689  000AF4  2E36               	decfsz	??_main& (0+255),f,c
   690  000AF6  D7FC               	bra	u937
   691  000AF8  D757               	goto	l1518
   692  000AFA                     __end_of_main:
   693                           	opt stack 0
   694                           tblptru	equ	0xFF8
   695                           tblptrh	equ	0xFF7
   696                           tblptrl	equ	0xFF6
   697                           tablat	equ	0xFF5
   698                           postinc0	equ	0xFEE
   699                           wreg	equ	0xFE8
   700                           postdec1	equ	0xFE5
   701                           fsr1l	equ	0xFE1
   702                           status	equ	0xFD8
   703                           
   704 ;; *************** function _Reloj_Calendario *****************
   705 ;; Defined at:
   706 ;;		line 68 in file "RTC.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   720 ;;      Params:         0       0       0       0       0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0       0       0       0       0
   722 ;;      Temps:          0       0       0       0       0       0       0       0       0
   723 ;;      Totals:         0       0       0       0       0       0       0       0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    3
   727 ;; This function calls:
   728 ;;		_BCD_a_Decimal
   729 ;;		_LCD_Goto
   730 ;;		_LCD_Print
   731 ;;		___awdiv
   732 ;;		___awmod
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text1
   739  000806                     __ptext1:
   740                           	opt stack 0
   741  000806                     _Reloj_Calendario:
   742                           	opt stack 27
   743                           
   744                           ;RTC.c: 70: static char Time[] = "TIME: 00:00:00";
   745                           ;RTC.c: 71: static char Date[] = "DATE: 00/00/2000";
   746                           ;RTC.c: 73: seconds = BCD_a_Decimal(seconds);
   747                           
   748                           ;incstack = 0
   749  000806  503B               	movf	_seconds,w,c
   750  000808  EC9E  F008         	call	_BCD_a_Decimal
   751  00080C  6E3B               	movwf	_seconds,c
   752                           
   753                           ;RTC.c: 74: minutes = BCD_a_Decimal(minutes);
   754  00080E  503C               	movf	_minutes,w,c
   755  000810  EC9E  F008         	call	_BCD_a_Decimal
   756  000814  6E3C               	movwf	_minutes,c
   757                           
   758                           ;RTC.c: 75: hours = BCD_a_Decimal(hours);
   759  000816  503D               	movf	_hours,w,c
   760  000818  EC9E  F008         	call	_BCD_a_Decimal
   761  00081C  6E3D               	movwf	_hours,c
   762                           
   763                           ;RTC.c: 76: day = BCD_a_Decimal(day);
   764  00081E  5038               	movf	_day,w,c
   765  000820  EC9E  F008         	call	_BCD_a_Decimal
   766  000824  6E38               	movwf	_day,c
   767                           
   768                           ;RTC.c: 77: month = BCD_a_Decimal(month);
   769  000826  5039               	movf	_month,w,c
   770  000828  EC9E  F008         	call	_BCD_a_Decimal
   771  00082C  6E39               	movwf	_month,c
   772                           
   773                           ;RTC.c: 78: year = BCD_a_Decimal(year);
   774  00082E  503A               	movf	_year,w,c
   775  000830  EC9E  F008         	call	_BCD_a_Decimal
   776  000834  6E3A               	movwf	_year,c
   777                           
   778                           ;RTC.c: 80: Time[6] = hours / 10 + '0';
   779  000836  C03D  F021         	movff	_hours,___awdiv@dividend
   780  00083A  6A22               	clrf	___awdiv@dividend+1,c
   781  00083C  0E00               	movlw	0
   782  00083E  6E24               	movwf	___awdiv@divisor+1,c
   783  000840  0E0A               	movlw	10
   784  000842  6E23               	movwf	___awdiv@divisor,c
   785  000844  EC0C  F007         	call	___awdiv	;wreg free
   786  000848  5021               	movf	?___awdiv,w,c
   787  00084A  0F30               	addlw	48
   788  00084C  6E18               	movwf	Reloj_Calendario@Time+6,c
   789                           
   790                           ;RTC.c: 81: Time[7] = hours % 10 + '0';
   791  00084E  C03D  F021         	movff	_hours,___awmod@dividend
   792  000852  6A22               	clrf	___awmod@dividend+1,c
   793  000854  0E00               	movlw	0
   794  000856  6E24               	movwf	___awmod@divisor+1,c
   795  000858  0E0A               	movlw	10
   796  00085A  6E23               	movwf	___awmod@divisor,c
   797  00085C  EC8F  F007         	call	___awmod	;wreg free
   798  000860  5021               	movf	?___awmod,w,c
   799  000862  0F30               	addlw	48
   800  000864  6E19               	movwf	Reloj_Calendario@Time+7,c
   801                           
   802                           ;RTC.c: 82: Time[9] = minutes / 10 + '0';
   803  000866  C03C  F021         	movff	_minutes,___awdiv@dividend
   804  00086A  6A22               	clrf	___awdiv@dividend+1,c
   805  00086C  0E00               	movlw	0
   806  00086E  6E24               	movwf	___awdiv@divisor+1,c
   807  000870  0E0A               	movlw	10
   808  000872  6E23               	movwf	___awdiv@divisor,c
   809  000874  EC0C  F007         	call	___awdiv	;wreg free
   810  000878  5021               	movf	?___awdiv,w,c
   811  00087A  0F30               	addlw	48
   812  00087C  6E1B               	movwf	Reloj_Calendario@Time+9,c
   813                           
   814                           ;RTC.c: 83: Time[10]= minutes % 10 + '0';
   815  00087E  C03C  F021         	movff	_minutes,___awmod@dividend
   816  000882  6A22               	clrf	___awmod@dividend+1,c
   817  000884  0E00               	movlw	0
   818  000886  6E24               	movwf	___awmod@divisor+1,c
   819  000888  0E0A               	movlw	10
   820  00088A  6E23               	movwf	___awmod@divisor,c
   821  00088C  EC8F  F007         	call	___awmod	;wreg free
   822  000890  5021               	movf	?___awmod,w,c
   823  000892  0F30               	addlw	48
   824  000894  6E1C               	movwf	Reloj_Calendario@Time+10,c
   825                           
   826                           ;RTC.c: 84: Time[12]= seconds / 10 + '0';
   827  000896  C03B  F021         	movff	_seconds,___awdiv@dividend
   828  00089A  6A22               	clrf	___awdiv@dividend+1,c
   829  00089C  0E00               	movlw	0
   830  00089E  6E24               	movwf	___awdiv@divisor+1,c
   831  0008A0  0E0A               	movlw	10
   832  0008A2  6E23               	movwf	___awdiv@divisor,c
   833  0008A4  EC0C  F007         	call	___awdiv	;wreg free
   834  0008A8  5021               	movf	?___awdiv,w,c
   835  0008AA  0F30               	addlw	48
   836  0008AC  6E1E               	movwf	Reloj_Calendario@Time+12,c
   837                           
   838                           ;RTC.c: 85: Time[13]= seconds % 10 + '0';
   839  0008AE  C03B  F021         	movff	_seconds,___awmod@dividend
   840  0008B2  6A22               	clrf	___awmod@dividend+1,c
   841  0008B4  0E00               	movlw	0
   842  0008B6  6E24               	movwf	___awmod@divisor+1,c
   843  0008B8  0E0A               	movlw	10
   844  0008BA  6E23               	movwf	___awmod@divisor,c
   845  0008BC  EC8F  F007         	call	___awmod	;wreg free
   846  0008C0  5021               	movf	?___awmod,w,c
   847  0008C2  0F30               	addlw	48
   848  0008C4  6E1F               	movwf	Reloj_Calendario@Time+13,c
   849                           
   850                           ;RTC.c: 87: Date[6] = day / 10 + '0';
   851  0008C6  C038  F021         	movff	_day,___awdiv@dividend
   852  0008CA  6A22               	clrf	___awdiv@dividend+1,c
   853  0008CC  0E00               	movlw	0
   854  0008CE  6E24               	movwf	___awdiv@divisor+1,c
   855  0008D0  0E0A               	movlw	10
   856  0008D2  6E23               	movwf	___awdiv@divisor,c
   857  0008D4  EC0C  F007         	call	___awdiv	;wreg free
   858  0008D8  5021               	movf	?___awdiv,w,c
   859  0008DA  0F30               	addlw	48
   860  0008DC  6E07               	movwf	Reloj_Calendario@Date+6,c
   861                           
   862                           ;RTC.c: 88: Date[7] = day % 10 + '0';
   863  0008DE  C038  F021         	movff	_day,___awmod@dividend
   864  0008E2  6A22               	clrf	___awmod@dividend+1,c
   865  0008E4  0E00               	movlw	0
   866  0008E6  6E24               	movwf	___awmod@divisor+1,c
   867  0008E8  0E0A               	movlw	10
   868  0008EA  6E23               	movwf	___awmod@divisor,c
   869  0008EC  EC8F  F007         	call	___awmod	;wreg free
   870  0008F0  5021               	movf	?___awmod,w,c
   871  0008F2  0F30               	addlw	48
   872  0008F4  6E08               	movwf	Reloj_Calendario@Date+7,c
   873                           
   874                           ;RTC.c: 89: Date[9] = month / 10 + '0';
   875  0008F6  C039  F021         	movff	_month,___awdiv@dividend
   876  0008FA  6A22               	clrf	___awdiv@dividend+1,c
   877  0008FC  0E00               	movlw	0
   878  0008FE  6E24               	movwf	___awdiv@divisor+1,c
   879  000900  0E0A               	movlw	10
   880  000902  6E23               	movwf	___awdiv@divisor,c
   881  000904  EC0C  F007         	call	___awdiv	;wreg free
   882  000908  5021               	movf	?___awdiv,w,c
   883  00090A  0F30               	addlw	48
   884  00090C  6E0A               	movwf	Reloj_Calendario@Date+9,c
   885                           
   886                           ;RTC.c: 90: Date[10]= month % 10 + '0';
   887  00090E  C039  F021         	movff	_month,___awmod@dividend
   888  000912  6A22               	clrf	___awmod@dividend+1,c
   889  000914  0E00               	movlw	0
   890  000916  6E24               	movwf	___awmod@divisor+1,c
   891  000918  0E0A               	movlw	10
   892  00091A  6E23               	movwf	___awmod@divisor,c
   893  00091C  EC8F  F007         	call	___awmod	;wreg free
   894  000920  5021               	movf	?___awmod,w,c
   895  000922  0F30               	addlw	48
   896  000924  6E0B               	movwf	Reloj_Calendario@Date+10,c
   897                           
   898                           ;RTC.c: 91: Date[14]= year / 10 + '0';
   899  000926  C03A  F021         	movff	_year,___awdiv@dividend
   900  00092A  6A22               	clrf	___awdiv@dividend+1,c
   901  00092C  0E00               	movlw	0
   902  00092E  6E24               	movwf	___awdiv@divisor+1,c
   903  000930  0E0A               	movlw	10
   904  000932  6E23               	movwf	___awdiv@divisor,c
   905  000934  EC0C  F007         	call	___awdiv	;wreg free
   906  000938  5021               	movf	?___awdiv,w,c
   907  00093A  0F30               	addlw	48
   908  00093C  6E0F               	movwf	Reloj_Calendario@Date+14,c
   909                           
   910                           ;RTC.c: 92: Date[15]= year % 10 + '0';
   911  00093E  C03A  F021         	movff	_year,___awmod@dividend
   912  000942  6A22               	clrf	___awmod@dividend+1,c
   913  000944  0E00               	movlw	0
   914  000946  6E24               	movwf	___awmod@divisor+1,c
   915  000948  0E0A               	movlw	10
   916  00094A  6E23               	movwf	___awmod@divisor,c
   917  00094C  EC8F  F007         	call	___awmod	;wreg free
   918  000950  5021               	movf	?___awmod,w,c
   919  000952  0F30               	addlw	48
   920  000954  6E10               	movwf	Reloj_Calendario@Date+15,c
   921                           
   922                           ;RTC.c: 94: LCD_Goto(1, 1);
   923  000956  0E01               	movlw	1
   924  000958  6E24               	movwf	LCD_Goto@row,c
   925  00095A  0E01               	movlw	1
   926  00095C  ECF7  F007         	call	_LCD_Goto
   927                           
   928                           ;RTC.c: 95: LCD_Print(Time);
   929  000960  0E12               	movlw	low Reloj_Calendario@Time
   930  000962  6E23               	movwf	LCD_Print@LCD_Str,c
   931  000964  0E00               	movlw	high Reloj_Calendario@Time
   932  000966  6E24               	movwf	LCD_Print@LCD_Str+1,c
   933  000968  EC0E  F006         	call	_LCD_Print	;wreg free
   934                           
   935                           ;RTC.c: 96: LCD_Goto(1, 2);
   936  00096C  0E02               	movlw	2
   937  00096E  6E24               	movwf	LCD_Goto@row,c
   938  000970  0E01               	movlw	1
   939  000972  ECF7  F007         	call	_LCD_Goto
   940                           
   941                           ;RTC.c: 97: LCD_Print(Date);
   942  000976  0E01               	movlw	low Reloj_Calendario@Date
   943  000978  6E23               	movwf	LCD_Print@LCD_Str,c
   944  00097A  0E00               	movlw	high Reloj_Calendario@Date
   945  00097C  6E24               	movwf	LCD_Print@LCD_Str+1,c
   946  00097E  EC0E  F006         	call	_LCD_Print	;wreg free
   947  000982  0012               	return		;funcret
   948  000984                     __end_of_Reloj_Calendario:
   949                           	opt stack 0
   950                           tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           tblptrl	equ	0xFF6
   953                           tablat	equ	0xFF5
   954                           postinc0	equ	0xFEE
   955                           wreg	equ	0xFE8
   956                           postdec1	equ	0xFE5
   957                           fsr1l	equ	0xFE1
   958                           status	equ	0xFD8
   959                           
   960 ;; *************** function _BCD_a_Decimal *****************
   961 ;; Defined at:
   962 ;;		line 54 in file "RTC.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  numero          1    wreg     unsigned char 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  numero          1    1[COMRAM] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      unsigned char 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, prodl, prodh
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   976 ;;      Params:         0       0       0       0       0       0       0       0       0
   977 ;;      Locals:         1       0       0       0       0       0       0       0       0
   978 ;;      Temps:          1       0       0       0       0       0       0       0       0
   979 ;;      Totals:         2       0       0       0       0       0       0       0       0
   980 ;;Total ram usage:        2 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_Reloj_Calendario
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text2
   990  00113C                     __ptext2:
   991                           	opt stack 0
   992  00113C                     _BCD_a_Decimal:
   993                           	opt stack 29
   994                           
   995                           ;incstack = 0
   996                           ;BCD_a_Decimal@numero stored from wreg
   997  00113C  6E22               	movwf	BCD_a_Decimal@numero,c
   998                           
   999                           ;RTC.c: 56: return ((numero >> 4) * 10 + (numero & 0x0F));
  1000  00113E  C022  F021         	movff	BCD_a_Decimal@numero,??_BCD_a_Decimal
  1001  001142  0E0F               	movlw	15
  1002  001144  1621               	andwf	??_BCD_a_Decimal,f,c
  1003  001146  3822               	swapf	BCD_a_Decimal@numero,w,c
  1004  001148  0B0F               	andlw	15
  1005  00114A  0D0A               	mullw	10
  1006  00114C  50F3               	movf	prodl,w,c
  1007  00114E  2421               	addwf	??_BCD_a_Decimal,w,c
  1008  001150  0012               	return	
  1009  001152                     __end_of_BCD_a_Decimal:
  1010                           	opt stack 0
  1011                           tblptru	equ	0xFF8
  1012                           tblptrh	equ	0xFF7
  1013                           tblptrl	equ	0xFF6
  1014                           tablat	equ	0xFF5
  1015                           prodl	equ	0xFF3
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           postdec1	equ	0xFE5
  1019                           fsr1l	equ	0xFE1
  1020                           status	equ	0xFD8
  1021                           
  1022 ;; *************** function _LCD_Begin *****************
  1023 ;; Defined at:
  1024 ;;		line 109 in file "LCD_Librery.h"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1040 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1041 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1042 ;;Total ram usage:        1 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    2
  1045 ;; This function calls:
  1046 ;;		_LCD_Cmd
  1047 ;; This function is called by:
  1048 ;;		_main
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text3
  1053  000CD8                     __ptext3:
  1054                           	opt stack 0
  1055  000CD8                     _LCD_Begin:
  1056                           	opt stack 28
  1057                           
  1058                           ;LCD_Librery.h: 111: RS = 0;
  1059                           
  1060                           ;incstack = 0
  1061  000CD8  903E               	bcf	_RS/(0+8),_RS& (0+7),c
  1062                           
  1063                           ;LCD_Librery.h: 113: LATDbits.LD0 = 0;
  1064  000CDA  908C               	bcf	3980,0,c	;volatile
  1065                           
  1066                           ;LCD_Librery.h: 114: LATDbits.LD1 = 0;
  1067  000CDC  928C               	bcf	3980,1,c	;volatile
  1068                           
  1069                           ;LCD_Librery.h: 115: LATDbits.LD2 = 0;
  1070  000CDE  948C               	bcf	3980,2,c	;volatile
  1071                           
  1072                           ;LCD_Librery.h: 116: LATDbits.LD3 = 0;
  1073  000CE0  968C               	bcf	3980,3,c	;volatile
  1074                           
  1075                           ;LCD_Librery.h: 117: LATDbits.LD4 = 0;
  1076  000CE2  988C               	bcf	3980,4,c	;volatile
  1077                           
  1078                           ;LCD_Librery.h: 118: LATDbits.LD5 = 0;
  1079  000CE4  9A8C               	bcf	3980,5,c	;volatile
  1080                           
  1081                           ;LCD_Librery.h: 119: TRISDbits.RD0 = 0;
  1082  000CE6  9095               	bcf	3989,0,c	;volatile
  1083                           
  1084                           ;LCD_Librery.h: 120: TRISDbits.RD1 = 0;
  1085  000CE8  9295               	bcf	3989,1,c	;volatile
  1086                           
  1087                           ;LCD_Librery.h: 121: TRISDbits.RD2 = 0;
  1088  000CEA  9495               	bcf	3989,2,c	;volatile
  1089                           
  1090                           ;LCD_Librery.h: 122: TRISDbits.RD3 = 0;
  1091  000CEC  9695               	bcf	3989,3,c	;volatile
  1092                           
  1093                           ;LCD_Librery.h: 123: TRISDbits.RD4 = 0;
  1094  000CEE  9895               	bcf	3989,4,c	;volatile
  1095                           
  1096                           ;LCD_Librery.h: 124: TRISDbits.RD5 = 0;
  1097  000CF0  9A95               	bcf	3989,5,c	;volatile
  1098                           
  1099                           ;LCD_Librery.h: 126: _delay((unsigned long)((40)*(800000/4000.0)));
  1100  000CF2  0E0B               	movlw	11
  1101  000CF4  6E24               	movwf	??_LCD_Begin& (0+255),c
  1102  000CF6  0E62               	movlw	98
  1103  000CF8                     u947:
  1104  000CF8  2EE8               	decfsz	wreg,f,c
  1105  000CFA  D7FE               	bra	u947
  1106  000CFC  2E24               	decfsz	??_LCD_Begin& (0+255),f,c
  1107  000CFE  D7FC               	bra	u947
  1108  000D00  D000               	nop2	
  1109                           
  1110                           ;LCD_Librery.h: 127: LCD_Cmd(3);
  1111  000D02  0E03               	movlw	3
  1112  000D04  EC69  F008         	call	_LCD_Cmd
  1113                           
  1114                           ;LCD_Librery.h: 128: _delay((unsigned long)((5)*(800000/4000.0)));
  1115  000D08  0EC8               	movlw	200
  1116  000D0A                     u957:
  1117  000D0A  D000               	nop2	
  1118  000D0C  2EE8               	decfsz	wreg,f,c
  1119  000D0E  D7FD               	bra	u957
  1120                           
  1121                           ;LCD_Librery.h: 129: LCD_Cmd(3);
  1122  000D10  0E03               	movlw	3
  1123  000D12  EC69  F008         	call	_LCD_Cmd
  1124                           
  1125                           ;LCD_Librery.h: 130: _delay((unsigned long)((5)*(800000/4000.0)));
  1126  000D16  0EC8               	movlw	200
  1127  000D18                     u967:
  1128  000D18  D000               	nop2	
  1129  000D1A  2EE8               	decfsz	wreg,f,c
  1130  000D1C  D7FD               	bra	u967
  1131                           
  1132                           ;LCD_Librery.h: 131: LCD_Cmd(3);
  1133  000D1E  0E03               	movlw	3
  1134  000D20  EC69  F008         	call	_LCD_Cmd
  1135                           
  1136                           ;LCD_Librery.h: 132: _delay((unsigned long)((5)*(800000/4000.0)));
  1137  000D24  0EC8               	movlw	200
  1138  000D26                     u977:
  1139  000D26  D000               	nop2	
  1140  000D28  2EE8               	decfsz	wreg,f,c
  1141  000D2A  D7FD               	bra	u977
  1142                           
  1143                           ;LCD_Librery.h: 133: LCD_Cmd(0x02);
  1144  000D2C  0E02               	movlw	2
  1145  000D2E  EC69  F008         	call	_LCD_Cmd
  1146                           
  1147                           ;LCD_Librery.h: 134: _delay((unsigned long)((5)*(800000/4000.0)));
  1148  000D32  0EC8               	movlw	200
  1149  000D34                     u987:
  1150  000D34  D000               	nop2	
  1151  000D36  2EE8               	decfsz	wreg,f,c
  1152  000D38  D7FD               	bra	u987
  1153                           
  1154                           ;LCD_Librery.h: 135: LCD_Cmd(0x20 | (2 << 2));
  1155  000D3A  0E28               	movlw	40
  1156  000D3C  EC69  F008         	call	_LCD_Cmd
  1157                           
  1158                           ;LCD_Librery.h: 136: _delay((unsigned long)((50)*(800000/4000.0)));
  1159  000D40  0E0D               	movlw	13
  1160  000D42  6E24               	movwf	??_LCD_Begin& (0+255),c
  1161  000D44  0EFC               	movlw	252
  1162  000D46                     u997:
  1163  000D46  2EE8               	decfsz	wreg,f,c
  1164  000D48  D7FE               	bra	u997
  1165  000D4A  2E24               	decfsz	??_LCD_Begin& (0+255),f,c
  1166  000D4C  D7FC               	bra	u997
  1167                           
  1168                           ;LCD_Librery.h: 137: LCD_Cmd(0x0C);
  1169  000D4E  0E0C               	movlw	12
  1170  000D50  EC69  F008         	call	_LCD_Cmd
  1171                           
  1172                           ;LCD_Librery.h: 138: _delay((unsigned long)((50)*(800000/4000.0)));
  1173  000D54  0E0D               	movlw	13
  1174  000D56  6E24               	movwf	??_LCD_Begin& (0+255),c
  1175  000D58  0EFC               	movlw	252
  1176  000D5A                     u1007:
  1177  000D5A  2EE8               	decfsz	wreg,f,c
  1178  000D5C  D7FE               	bra	u1007
  1179  000D5E  2E24               	decfsz	??_LCD_Begin& (0+255),f,c
  1180  000D60  D7FC               	bra	u1007
  1181                           
  1182                           ;LCD_Librery.h: 139: LCD_Cmd(0x01);
  1183  000D62  0E01               	movlw	1
  1184  000D64  EC69  F008         	call	_LCD_Cmd
  1185                           
  1186                           ;LCD_Librery.h: 140: _delay((unsigned long)((50)*(800000/4000.0)));
  1187  000D68  0E0D               	movlw	13
  1188  000D6A  6E24               	movwf	??_LCD_Begin& (0+255),c
  1189  000D6C  0EFC               	movlw	252
  1190  000D6E                     u1017:
  1191  000D6E  2EE8               	decfsz	wreg,f,c
  1192  000D70  D7FE               	bra	u1017
  1193  000D72  2E24               	decfsz	??_LCD_Begin& (0+255),f,c
  1194  000D74  D7FC               	bra	u1017
  1195                           
  1196                           ;LCD_Librery.h: 141: LCD_Cmd(0x04 | 0x02);
  1197  000D76  0E06               	movlw	6
  1198  000D78  EC69  F008         	call	_LCD_Cmd
  1199                           
  1200                           ;LCD_Librery.h: 142: _delay((unsigned long)((50)*(800000/4000.0)));
  1201  000D7C  0E0D               	movlw	13
  1202  000D7E  6E24               	movwf	??_LCD_Begin& (0+255),c
  1203  000D80  0EFC               	movlw	252
  1204  000D82                     u1027:
  1205  000D82  2EE8               	decfsz	wreg,f,c
  1206  000D84  D7FE               	bra	u1027
  1207  000D86  2E24               	decfsz	??_LCD_Begin& (0+255),f,c
  1208  000D88  D7FC               	bra	u1027
  1209  000D8A  0012               	return		;funcret
  1210  000D8C                     __end_of_LCD_Begin:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           prodl	equ	0xFF3
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec1	equ	0xFE5
  1220                           fsr1l	equ	0xFE1
  1221                           status	equ	0xFD8
  1222                           
  1223 ;; *************** function _I2C_Write *****************
  1224 ;; Defined at:
  1225 ;;		line 117 in file "I2C.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  data            1    wreg     unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  data            1    0[COMRAM] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1239 ;;      Params:         0       0       0       0       0       0       0       0       0
  1240 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1242 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1243 ;;Total ram usage:        1 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text4
  1253  001166                     __ptext4:
  1254                           	opt stack 0
  1255  001166                     _I2C_Write:
  1256                           	opt stack 30
  1257                           
  1258                           ;incstack = 0
  1259                           ;I2C_Write@data stored from wreg
  1260  001166  6E21               	movwf	I2C_Write@data,c
  1261                           
  1262                           ;I2C.c: 119: PIR1bits.SSPIF=0;
  1263  001168  969E               	bcf	3998,3,c	;volatile
  1264                           
  1265                           ;I2C.c: 123: SSPBUF=data;
  1266  00116A  C021  FFC9         	movff	I2C_Write@data,4041	;volatile
  1267  00116E                     l187:
  1268  00116E  B69E               	btfsc	3998,3,c	;volatile
  1269  001170  0012               	return	
  1270  001172  D7FD               	goto	l187
  1271  001174                     __end_of_I2C_Write:
  1272                           	opt stack 0
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           prodl	equ	0xFF3
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1l	equ	0xFE1
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _I2C_Stop *****************
  1285 ;; Defined at:
  1286 ;;		line 64 in file "I2C.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		None
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text5
  1314  001198                     __ptext5:
  1315                           	opt stack 0
  1316  001198                     _I2C_Stop:
  1317                           	opt stack 30
  1318                           
  1319                           ;I2C.c: 66: SSPCON2bits.PEN=1;
  1320                           
  1321                           ;incstack = 0
  1322  001198  84C5               	bsf	4037,2,c	;volatile
  1323  00119A                     l169:
  1324  00119A  A4C5               	btfss	4037,2,c	;volatile
  1325  00119C  0012               	return	
  1326  00119E  D7FD               	goto	l169
  1327  0011A0                     __end_of_I2C_Stop:
  1328                           	opt stack 0
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           prodl	equ	0xFF3
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           postdec1	equ	0xFE5
  1337                           fsr1l	equ	0xFE1
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _I2C_Start *****************
  1341 ;; Defined at:
  1342 ;;		line 42 in file "I2C.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		None
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1359 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text6
  1370  0011A0                     __ptext6:
  1371                           	opt stack 0
  1372  0011A0                     _I2C_Start:
  1373                           	opt stack 30
  1374                           
  1375                           ;I2C.c: 44: SSPCON2bits.SEN=1;
  1376                           
  1377                           ;incstack = 0
  1378  0011A0  80C5               	bsf	4037,0,c	;volatile
  1379  0011A2                     l157:
  1380  0011A2  A0C5               	btfss	4037,0,c	;volatile
  1381  0011A4  0012               	return	
  1382  0011A6  D7FD               	goto	l157
  1383  0011A8                     __end_of_I2C_Start:
  1384                           	opt stack 0
  1385                           tblptru	equ	0xFF8
  1386                           tblptrh	equ	0xFF7
  1387                           tblptrl	equ	0xFF6
  1388                           tablat	equ	0xFF5
  1389                           prodl	equ	0xFF3
  1390                           postinc0	equ	0xFEE
  1391                           wreg	equ	0xFE8
  1392                           postdec1	equ	0xFE5
  1393                           fsr1l	equ	0xFE1
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _I2C_Read *****************
  1397 ;; Defined at:
  1398 ;;		line 130 in file "I2C.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      unsigned char 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1415 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text7
  1426  001174                     __ptext7:
  1427                           	opt stack 0
  1428  001174                     _I2C_Read:
  1429                           	opt stack 30
  1430                           
  1431                           ;I2C.c: 132: PIR1bits.SSPIF=0;
  1432                           
  1433                           ;incstack = 0
  1434  001174  969E               	bcf	3998,3,c	;volatile
  1435                           
  1436                           ;I2C.c: 136: SSPCON2bits.RCEN=1;
  1437  001176  86C5               	bsf	4037,3,c	;volatile
  1438  001178                     l193:
  1439  001178  A69E               	btfss	3998,3,c	;volatile
  1440  00117A  D7FE               	goto	l193
  1441                           
  1442                           ;I2C.c: 143: return SSPBUF;
  1443  00117C  50C9               	movf	4041,w,c	;volatile
  1444  00117E  0012               	return	
  1445  001180                     __end_of_I2C_Read:
  1446                           	opt stack 0
  1447                           tblptru	equ	0xFF8
  1448                           tblptrh	equ	0xFF7
  1449                           tblptrl	equ	0xFF6
  1450                           tablat	equ	0xFF5
  1451                           prodl	equ	0xFF3
  1452                           postinc0	equ	0xFEE
  1453                           wreg	equ	0xFE8
  1454                           postdec1	equ	0xFE5
  1455                           fsr1l	equ	0xFE1
  1456                           status	equ	0xFD8
  1457                           
  1458 ;; *************** function _I2C_ReStart *****************
  1459 ;; Defined at:
  1460 ;;		line 53 in file "I2C.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		None
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text8
  1488  0011A8                     __ptext8:
  1489                           	opt stack 0
  1490  0011A8                     _I2C_ReStart:
  1491                           	opt stack 30
  1492                           
  1493                           ;I2C.c: 55: SSPCON2bits.RSEN=1;
  1494                           
  1495                           ;incstack = 0
  1496  0011A8  82C5               	bsf	4037,1,c	;volatile
  1497  0011AA                     l163:
  1498  0011AA  A2C5               	btfss	4037,1,c	;volatile
  1499  0011AC  0012               	return	
  1500  0011AE  D7FD               	goto	l163
  1501  0011B0                     __end_of_I2C_ReStart:
  1502                           	opt stack 0
  1503                           tblptru	equ	0xFF8
  1504                           tblptrh	equ	0xFF7
  1505                           tblptrl	equ	0xFF6
  1506                           tablat	equ	0xFF5
  1507                           prodl	equ	0xFF3
  1508                           postinc0	equ	0xFEE
  1509                           wreg	equ	0xFE8
  1510                           postdec1	equ	0xFE5
  1511                           fsr1l	equ	0xFE1
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function _I2C_NO_Ack *****************
  1515 ;; Defined at:
  1516 ;;		line 96 in file "I2C.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		None
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1530 ;;      Params:         0       0       0       0       0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1533 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text9
  1544  001180                     __ptext9:
  1545                           	opt stack 0
  1546  001180                     _I2C_NO_Ack:
  1547                           	opt stack 30
  1548                           
  1549                           ;I2C.c: 98: PIR1bits.SSPIF=0;
  1550                           
  1551                           ;incstack = 0
  1552  001180  969E               	bcf	3998,3,c	;volatile
  1553                           
  1554                           ;I2C.c: 102: SSPCON2bits.ACKDT=1;
  1555  001182  8AC5               	bsf	4037,5,c	;volatile
  1556                           
  1557                           ;I2C.c: 107: SSPCON2bits.ACKEN=1;
  1558  001184  88C5               	bsf	4037,4,c	;volatile
  1559  001186                     l181:
  1560  001186  B69E               	btfsc	3998,3,c	;volatile
  1561  001188  0012               	return	
  1562  00118A  D7FD               	goto	l181
  1563  00118C                     __end_of_I2C_NO_Ack:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           prodl	equ	0xFF3
  1570                           postinc0	equ	0xFEE
  1571                           wreg	equ	0xFE8
  1572                           postdec1	equ	0xFE5
  1573                           fsr1l	equ	0xFE1
  1574                           status	equ	0xFD8
  1575                           
  1576 ;; *************** function _I2C_Init *****************
  1577 ;; Defined at:
  1578 ;;		line 6 in file "I2C.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  frecuencia      4   13[COMRAM] unsigned long 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1592 ;;      Params:         4       0       0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1594 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1595 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1596 ;;Total ram usage:        8 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    1
  1599 ;; This function calls:
  1600 ;;		___lldiv
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text10
  1607  000F8E                     __ptext10:
  1608                           	opt stack 0
  1609  000F8E                     _I2C_Init:
  1610                           	opt stack 29
  1611                           
  1612                           ;I2C.c: 8: TRISB|=(1<<0);
  1613                           
  1614                           ;incstack = 0
  1615  000F8E  8093               	bsf	3987,0,c	;volatile
  1616                           
  1617                           ;I2C.c: 9: TRISB|=(1<<1);
  1618  000F90  8293               	bsf	3987,1,c	;volatile
  1619                           
  1620                           ;I2C.c: 11: SSPSTATbits.CKE=0;
  1621  000F92  9CC7               	bcf	4039,6,c	;volatile
  1622                           
  1623                           ;I2C.c: 16: SSPSTATbits.SMP=1;
  1624  000F94  8EC7               	bsf	4039,7,c	;volatile
  1625                           
  1626                           ;I2C.c: 21: SSPCON1bits.SSPEN=1;
  1627  000F96  8AC6               	bsf	4038,5,c	;volatile
  1628                           
  1629                           ;I2C.c: 26: SSPCON1bits.SSPM=0b1000;
  1630  000F98  50C6               	movf	4038,w,c	;volatile
  1631  000F9A  0BF0               	andlw	-16
  1632  000F9C  0908               	iorlw	8
  1633  000F9E  6EC6               	movwf	4038,c	;volatile
  1634                           
  1635                           ;I2C.c: 35: SSPCON2=0x00;
  1636  000FA0  0E00               	movlw	0
  1637  000FA2  6EC5               	movwf	4037,c	;volatile
  1638                           
  1639                           ;I2C.c: 37: SSPADD = ((800000/(4*frecuencia))-1);
  1640  000FA4  0E00               	movlw	0
  1641  000FA6  6E21               	movwf	___lldiv@dividend,c
  1642  000FA8  0E35               	movlw	53
  1643  000FAA  6E22               	movwf	___lldiv@dividend+1,c
  1644  000FAC  0E0C               	movlw	12
  1645  000FAE  6E23               	movwf	___lldiv@dividend+2,c
  1646  000FB0  0E00               	movlw	0
  1647  000FB2  6E24               	movwf	___lldiv@dividend+3,c
  1648  000FB4  C02E  F032         	movff	I2C_Init@frecuencia,??_I2C_Init
  1649  000FB8  C02F  F033         	movff	I2C_Init@frecuencia+1,??_I2C_Init+1
  1650  000FBC  C030  F034         	movff	I2C_Init@frecuencia+2,??_I2C_Init+2
  1651  000FC0  C031  F035         	movff	I2C_Init@frecuencia+3,??_I2C_Init+3
  1652  000FC4  0E02               	movlw	2
  1653  000FC6                     u885:
  1654  000FC6  90D8               	bcf	status,0,c
  1655  000FC8  3632               	rlcf	??_I2C_Init,f,c
  1656  000FCA  3633               	rlcf	??_I2C_Init+1,f,c
  1657  000FCC  3634               	rlcf	??_I2C_Init+2,f,c
  1658  000FCE  3635               	rlcf	??_I2C_Init+3,f,c
  1659  000FD0  2EE8               	decfsz	wreg,f,c
  1660  000FD2  D7F9               	goto	u885
  1661  000FD4  C032  F025         	movff	??_I2C_Init,___lldiv@divisor
  1662  000FD8  C033  F026         	movff	??_I2C_Init+1,___lldiv@divisor+1
  1663  000FDC  C034  F027         	movff	??_I2C_Init+2,___lldiv@divisor+2
  1664  000FE0  C035  F028         	movff	??_I2C_Init+3,___lldiv@divisor+3
  1665  000FE4  EC4E  F007         	call	___lldiv	;wreg free
  1666  000FE8  0421               	decf	?___lldiv,w,c
  1667  000FEA  6EC8               	movwf	4040,c	;volatile
  1668  000FEC  0012               	return		;funcret
  1669  000FEE                     __end_of_I2C_Init:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           prodl	equ	0xFF3
  1676                           postinc0	equ	0xFEE
  1677                           wreg	equ	0xFE8
  1678                           postdec1	equ	0xFE5
  1679                           fsr1l	equ	0xFE1
  1680                           status	equ	0xFD8
  1681                           
  1682 ;; *************** function ___lldiv *****************
  1683 ;; Defined at:
  1684 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  dividend        4    0[COMRAM] unsigned long 
  1687 ;;  divisor         4    4[COMRAM] unsigned long 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  quotient        4    8[COMRAM] unsigned long 
  1690 ;;  counter         1   12[COMRAM] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  4    0[COMRAM] unsigned long 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1700 ;;      Params:         8       0       0       0       0       0       0       0       0
  1701 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1703 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1704 ;;Total ram usage:       13 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_I2C_Init
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text11
  1714  000E9C                     __ptext11:
  1715                           	opt stack 0
  1716  000E9C                     ___lldiv:
  1717                           	opt stack 29
  1718                           
  1719                           ;incstack = 0
  1720  000E9C  0E00               	movlw	0
  1721  000E9E  6E29               	movwf	___lldiv@quotient,c
  1722  000EA0  0E00               	movlw	0
  1723  000EA2  6E2A               	movwf	___lldiv@quotient+1,c
  1724  000EA4  0E00               	movlw	0
  1725  000EA6  6E2B               	movwf	___lldiv@quotient+2,c
  1726  000EA8  0E00               	movlw	0
  1727  000EAA  6E2C               	movwf	___lldiv@quotient+3,c
  1728  000EAC  5025               	movf	___lldiv@divisor,w,c
  1729  000EAE  1026               	iorwf	___lldiv@divisor+1,w,c
  1730  000EB0  1027               	iorwf	___lldiv@divisor+2,w,c
  1731  000EB2  1028               	iorwf	___lldiv@divisor+3,w,c
  1732  000EB4  B4D8               	btfsc	status,2,c
  1733  000EB6  D02A               	goto	l546
  1734  000EB8  0E01               	movlw	1
  1735  000EBA  6E2D               	movwf	___lldiv@counter,c
  1736  000EBC  D006               	goto	l1376
  1737  000EBE                     l1374:
  1738  000EBE  90D8               	bcf	status,0,c
  1739  000EC0  3625               	rlcf	___lldiv@divisor,f,c
  1740  000EC2  3626               	rlcf	___lldiv@divisor+1,f,c
  1741  000EC4  3627               	rlcf	___lldiv@divisor+2,f,c
  1742  000EC6  3628               	rlcf	___lldiv@divisor+3,f,c
  1743  000EC8  2A2D               	incf	___lldiv@counter,f,c
  1744  000ECA                     l1376:
  1745  000ECA  AE28               	btfss	___lldiv@divisor+3,7,c
  1746  000ECC  D7F8               	goto	l1374
  1747  000ECE                     l1378:
  1748  000ECE  90D8               	bcf	status,0,c
  1749  000ED0  3629               	rlcf	___lldiv@quotient,f,c
  1750  000ED2  362A               	rlcf	___lldiv@quotient+1,f,c
  1751  000ED4  362B               	rlcf	___lldiv@quotient+2,f,c
  1752  000ED6  362C               	rlcf	___lldiv@quotient+3,f,c
  1753  000ED8  5025               	movf	___lldiv@divisor,w,c
  1754  000EDA  5C21               	subwf	___lldiv@dividend,w,c
  1755  000EDC  5026               	movf	___lldiv@divisor+1,w,c
  1756  000EDE  5822               	subwfb	___lldiv@dividend+1,w,c
  1757  000EE0  5027               	movf	___lldiv@divisor+2,w,c
  1758  000EE2  5823               	subwfb	___lldiv@dividend+2,w,c
  1759  000EE4  5028               	movf	___lldiv@divisor+3,w,c
  1760  000EE6  5824               	subwfb	___lldiv@dividend+3,w,c
  1761  000EE8  A0D8               	btfss	status,0,c
  1762  000EEA  D009               	goto	l1386
  1763  000EEC  5025               	movf	___lldiv@divisor,w,c
  1764  000EEE  5E21               	subwf	___lldiv@dividend,f,c
  1765  000EF0  5026               	movf	___lldiv@divisor+1,w,c
  1766  000EF2  5A22               	subwfb	___lldiv@dividend+1,f,c
  1767  000EF4  5027               	movf	___lldiv@divisor+2,w,c
  1768  000EF6  5A23               	subwfb	___lldiv@dividend+2,f,c
  1769  000EF8  5028               	movf	___lldiv@divisor+3,w,c
  1770  000EFA  5A24               	subwfb	___lldiv@dividend+3,f,c
  1771  000EFC  8029               	bsf	___lldiv@quotient,0,c
  1772  000EFE                     l1386:
  1773  000EFE  90D8               	bcf	status,0,c
  1774  000F00  3228               	rrcf	___lldiv@divisor+3,f,c
  1775  000F02  3227               	rrcf	___lldiv@divisor+2,f,c
  1776  000F04  3226               	rrcf	___lldiv@divisor+1,f,c
  1777  000F06  3225               	rrcf	___lldiv@divisor,f,c
  1778  000F08  2E2D               	decfsz	___lldiv@counter,f,c
  1779  000F0A  D7E1               	goto	l1378
  1780  000F0C                     l546:
  1781  000F0C  C029  F021         	movff	___lldiv@quotient,?___lldiv
  1782  000F10  C02A  F022         	movff	___lldiv@quotient+1,?___lldiv+1
  1783  000F14  C02B  F023         	movff	___lldiv@quotient+2,?___lldiv+2
  1784  000F18  C02C  F024         	movff	___lldiv@quotient+3,?___lldiv+3
  1785  000F1C  0012               	return		;funcret
  1786  000F1E                     __end_of___lldiv:
  1787                           	opt stack 0
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           prodl	equ	0xFF3
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           postdec1	equ	0xFE5
  1796                           fsr1l	equ	0xFE1
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _I2C_Ack *****************
  1800 ;; Defined at:
  1801 ;;		line 75 in file "I2C.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		None
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text12
  1829  00118C                     __ptext12:
  1830                           	opt stack 0
  1831  00118C                     _I2C_Ack:
  1832                           	opt stack 30
  1833                           
  1834                           ;I2C.c: 77: PIR1bits.SSPIF=0;
  1835                           
  1836                           ;incstack = 0
  1837  00118C  969E               	bcf	3998,3,c	;volatile
  1838                           
  1839                           ;I2C.c: 81: SSPCON2bits.ACKDT=0;
  1840  00118E  9AC5               	bcf	4037,5,c	;volatile
  1841                           
  1842                           ;I2C.c: 86: SSPCON2bits.ACKEN=1;
  1843  001190  88C5               	bsf	4037,4,c	;volatile
  1844  001192                     l175:
  1845  001192  B69E               	btfsc	3998,3,c	;volatile
  1846  001194  0012               	return	
  1847  001196  D7FD               	goto	l175
  1848  001198                     __end_of_I2C_Ack:
  1849                           	opt stack 0
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           prodl	equ	0xFF3
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec1	equ	0xFE5
  1858                           fsr1l	equ	0xFE1
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _Establecer_Hora_Fecha *****************
  1862 ;; Defined at:
  1863 ;;		line 114 in file "RTC.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  x               1    wreg     unsigned char 
  1866 ;;  y               1    8[COMRAM] unsigned char 
  1867 ;;  parametro       1    9[COMRAM] unsigned char 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  x               1   11[COMRAM] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      unsigned char 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1879 ;;      Params:         2       0       0       0       0       0       0       0       0
  1880 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1881 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1882 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1883 ;;Total ram usage:        4 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    3
  1886 ;; This function calls:
  1887 ;;		_Anti_rebote
  1888 ;;		_LCD_Goto
  1889 ;;		_LCD_Print
  1890 ;;		_LCD_PutC
  1891 ;;		_Parpadeo
  1892 ;;		___awdiv
  1893 ;;		___awmod
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text13
  1900  000AFA                     __ptext13:
  1901                           	opt stack 0
  1902  000AFA                     _Establecer_Hora_Fecha:
  1903                           	opt stack 27
  1904                           
  1905                           ;incstack = 0
  1906                           ;Establecer_Hora_Fecha@x stored from wreg
  1907  000AFA  6E2C               	movwf	Establecer_Hora_Fecha@x,c
  1908  000AFC                     l1430:
  1909  000AFC  EC4F  F008         	call	_Anti_rebote	;wreg free
  1910  000B00  A0D8               	btfss	status,0,c
  1911  000B02  D053               	goto	l1472
  1912  000B04  D7FB               	goto	l1430
  1913  000B06                     l1432:
  1914                           
  1915                           ;RTC.c: 120: {
  1916                           ;RTC.c: 121: parametro++;
  1917  000B06  2A2A               	incf	Establecer_Hora_Fecha@parametro,f,c
  1918                           
  1919                           ;RTC.c: 122: if(i==0 && parametro>23)
  1920  000B08  5037               	movf	_i,w,c
  1921  000B0A  A4D8               	btfss	status,2,c
  1922  000B0C  D005               	goto	l1440
  1923  000B0E  0E17               	movlw	23
  1924  000B10  642A               	cpfsgt	Establecer_Hora_Fecha@parametro,c
  1925  000B12  D002               	goto	l1440
  1926                           
  1927                           ;RTC.c: 123: {
  1928                           ;RTC.c: 124: parametro=0;
  1929  000B14  0E00               	movlw	0
  1930  000B16  6E2A               	movwf	Establecer_Hora_Fecha@parametro,c
  1931  000B18                     l1440:
  1932                           
  1933                           ;RTC.c: 125: }
  1934                           ;RTC.c: 126: if(i==1 && parametro>59)
  1935  000B18  0437               	decf	_i,w,c
  1936  000B1A  A4D8               	btfss	status,2,c
  1937  000B1C  D005               	goto	l1446
  1938  000B1E  0E3B               	movlw	59
  1939  000B20  642A               	cpfsgt	Establecer_Hora_Fecha@parametro,c
  1940  000B22  D002               	goto	l1446
  1941                           
  1942                           ;RTC.c: 127: {
  1943                           ;RTC.c: 128: parametro=0;
  1944  000B24  0E00               	movlw	0
  1945  000B26  6E2A               	movwf	Establecer_Hora_Fecha@parametro,c
  1946  000B28                     l1446:
  1947                           
  1948                           ;RTC.c: 129: }
  1949                           ;RTC.c: 130: if(i==2 && parametro>31)
  1950  000B28  0E02               	movlw	2
  1951  000B2A  1837               	xorwf	_i,w,c
  1952  000B2C  A4D8               	btfss	status,2,c
  1953  000B2E  D005               	goto	l1452
  1954  000B30  0E1F               	movlw	31
  1955  000B32  642A               	cpfsgt	Establecer_Hora_Fecha@parametro,c
  1956  000B34  D002               	goto	l1452
  1957                           
  1958                           ;RTC.c: 131: {
  1959                           ;RTC.c: 132: parametro=1;
  1960  000B36  0E01               	movlw	1
  1961  000B38  6E2A               	movwf	Establecer_Hora_Fecha@parametro,c
  1962  000B3A                     l1452:
  1963                           
  1964                           ;RTC.c: 133: }
  1965                           ;RTC.c: 134: if(i==3 && parametro>12)
  1966  000B3A  0E03               	movlw	3
  1967  000B3C  1837               	xorwf	_i,w,c
  1968  000B3E  A4D8               	btfss	status,2,c
  1969  000B40  D005               	goto	l1458
  1970  000B42  0E0C               	movlw	12
  1971  000B44  642A               	cpfsgt	Establecer_Hora_Fecha@parametro,c
  1972  000B46  D002               	goto	l1458
  1973                           
  1974                           ;RTC.c: 135: {
  1975                           ;RTC.c: 136: parametro=1;
  1976  000B48  0E01               	movlw	1
  1977  000B4A  6E2A               	movwf	Establecer_Hora_Fecha@parametro,c
  1978  000B4C                     l1458:
  1979                           
  1980                           ;RTC.c: 137: }
  1981                           ;RTC.c: 138: if(i==4 && parametro>99)
  1982  000B4C  0E04               	movlw	4
  1983  000B4E  1837               	xorwf	_i,w,c
  1984  000B50  A4D8               	btfss	status,2,c
  1985  000B52  D005               	goto	l1464
  1986  000B54  0E63               	movlw	99
  1987  000B56  642A               	cpfsgt	Establecer_Hora_Fecha@parametro,c
  1988  000B58  D002               	goto	l1464
  1989                           
  1990                           ;RTC.c: 139: {
  1991                           ;RTC.c: 140: parametro=0;
  1992  000B5A  0E00               	movlw	0
  1993  000B5C  6E2A               	movwf	Establecer_Hora_Fecha@parametro,c
  1994  000B5E                     l1464:
  1995                           
  1996                           ;RTC.c: 141: }
  1997                           ;RTC.c: 142: LCD_Goto(x,y);
  1998  000B5E  C029  F024         	movff	Establecer_Hora_Fecha@y,LCD_Goto@row
  1999  000B62  502C               	movf	Establecer_Hora_Fecha@x,w,c
  2000  000B64  ECF7  F007         	call	_LCD_Goto
  2001                           
  2002                           ;RTC.c: 143: LCD_PutC(parametro / 10 + '0');
  2003  000B68  C02A  F021         	movff	Establecer_Hora_Fecha@parametro,___awdiv@dividend
  2004  000B6C  6A22               	clrf	___awdiv@dividend+1,c
  2005  000B6E  0E00               	movlw	0
  2006  000B70  6E24               	movwf	___awdiv@divisor+1,c
  2007  000B72  0E0A               	movlw	10
  2008  000B74  6E23               	movwf	___awdiv@divisor,c
  2009  000B76  EC0C  F007         	call	___awdiv	;wreg free
  2010  000B7A  5021               	movf	?___awdiv,w,c
  2011  000B7C  0F30               	addlw	48
  2012  000B7E  ECA9  F008         	call	_LCD_PutC
  2013                           
  2014                           ;RTC.c: 144: LCD_PutC(parametro % 10 + '0');
  2015  000B82  C02A  F021         	movff	Establecer_Hora_Fecha@parametro,___awmod@dividend
  2016  000B86  6A22               	clrf	___awmod@dividend+1,c
  2017  000B88  0E00               	movlw	0
  2018  000B8A  6E24               	movwf	___awmod@divisor+1,c
  2019  000B8C  0E0A               	movlw	10
  2020  000B8E  6E23               	movwf	___awmod@divisor,c
  2021  000B90  EC8F  F007         	call	___awmod	;wreg free
  2022  000B94  5021               	movf	?___awmod,w,c
  2023  000B96  0F30               	addlw	48
  2024  000B98  ECA9  F008         	call	_LCD_PutC
  2025                           
  2026                           ;RTC.c: 145: _delay((unsigned long)((200)*(800000/4000.0)));
  2027  000B9C  0E34               	movlw	52
  2028  000B9E  6E2B               	movwf	??_Establecer_Hora_Fecha& (0+255),c
  2029  000BA0  0EF2               	movlw	242
  2030  000BA2                     u1037:
  2031  000BA2  2EE8               	decfsz	wreg,f,c
  2032  000BA4  D7FE               	bra	u1037
  2033  000BA6  2E2B               	decfsz	??_Establecer_Hora_Fecha& (0+255),f,c
  2034  000BA8  D7FC               	bra	u1037
  2035  000BAA                     l1472:
  2036  000BAA  A280               	btfss	3968,1,c	;volatile
  2037  000BAC  D7AC               	goto	l1432
  2038                           
  2039                           ;RTC.c: 146: }
  2040                           ;RTC.c: 148: LCD_Goto(x, y);
  2041  000BAE  C029  F024         	movff	Establecer_Hora_Fecha@y,LCD_Goto@row
  2042  000BB2  502C               	movf	Establecer_Hora_Fecha@x,w,c
  2043  000BB4  ECF7  F007         	call	_LCD_Goto
  2044                           
  2045                           ;RTC.c: 149: LCD_Print("  ");
  2046  000BB8  0E01               	movlw	low STR_1
  2047  000BBA  6E23               	movwf	LCD_Print@LCD_Str,c
  2048  000BBC  0E08               	movlw	high STR_1
  2049  000BBE  6E24               	movwf	LCD_Print@LCD_Str+1,c
  2050  000BC0  EC0E  F006         	call	_LCD_Print	;wreg free
  2051                           
  2052                           ;RTC.c: 150: Parpadeo();
  2053  000BC4  EC8E  F008         	call	_Parpadeo	;wreg free
  2054                           
  2055                           ;RTC.c: 151: LCD_Goto(x, y);
  2056  000BC8  C029  F024         	movff	Establecer_Hora_Fecha@y,LCD_Goto@row
  2057  000BCC  502C               	movf	Establecer_Hora_Fecha@x,w,c
  2058  000BCE  ECF7  F007         	call	_LCD_Goto
  2059                           
  2060                           ;RTC.c: 152: LCD_PutC(parametro / 10 + '0');
  2061  000BD2  C02A  F021         	movff	Establecer_Hora_Fecha@parametro,___awdiv@dividend
  2062  000BD6  6A22               	clrf	___awdiv@dividend+1,c
  2063  000BD8  0E00               	movlw	0
  2064  000BDA  6E24               	movwf	___awdiv@divisor+1,c
  2065  000BDC  0E0A               	movlw	10
  2066  000BDE  6E23               	movwf	___awdiv@divisor,c
  2067  000BE0  EC0C  F007         	call	___awdiv	;wreg free
  2068  000BE4  5021               	movf	?___awdiv,w,c
  2069  000BE6  0F30               	addlw	48
  2070  000BE8  ECA9  F008         	call	_LCD_PutC
  2071                           
  2072                           ;RTC.c: 153: LCD_PutC(parametro % 10 + '0');
  2073  000BEC  C02A  F021         	movff	Establecer_Hora_Fecha@parametro,___awmod@dividend
  2074  000BF0  6A22               	clrf	___awmod@dividend+1,c
  2075  000BF2  0E00               	movlw	0
  2076  000BF4  6E24               	movwf	___awmod@divisor+1,c
  2077  000BF6  0E0A               	movlw	10
  2078  000BF8  6E23               	movwf	___awmod@divisor,c
  2079  000BFA  EC8F  F007         	call	___awmod	;wreg free
  2080  000BFE  5021               	movf	?___awmod,w,c
  2081  000C00  0F30               	addlw	48
  2082  000C02  ECA9  F008         	call	_LCD_PutC
  2083                           
  2084                           ;RTC.c: 154: Parpadeo();
  2085  000C06  EC8E  F008         	call	_Parpadeo	;wreg free
  2086                           
  2087                           ;RTC.c: 156: if(!(PORTAbits.RA0))
  2088  000C0A  B080               	btfsc	3968,0,c	;volatile
  2089  000C0C  D7CE               	goto	l1472
  2090                           
  2091                           ;RTC.c: 157: if(Anti_rebote())
  2092  000C0E  EC4F  F008         	call	_Anti_rebote	;wreg free
  2093  000C12  A0D8               	btfss	status,0,c
  2094  000C14  D7CA               	goto	l1472
  2095                           
  2096                           ;RTC.c: 158: {
  2097                           ;RTC.c: 159: i++;
  2098  000C16  2A37               	incf	_i,f,c
  2099                           
  2100                           ;RTC.c: 160: return parametro;
  2101  000C18  502A               	movf	Establecer_Hora_Fecha@parametro,w,c
  2102  000C1A  0012               	return	
  2103  000C1C                     __end_of_Establecer_Hora_Fecha:
  2104                           	opt stack 0
  2105                           tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           prodl	equ	0xFF3
  2110                           postinc0	equ	0xFEE
  2111                           wreg	equ	0xFE8
  2112                           postdec1	equ	0xFE5
  2113                           fsr1l	equ	0xFE1
  2114                           status	equ	0xFD8
  2115                           
  2116 ;; *************** function _Parpadeo *****************
  2117 ;; Defined at:
  2118 ;;		line 102 in file "RTC.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  j               1    0[COMRAM] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0
  2133 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2135 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2136 ;;Total ram usage:        1 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_Establecer_Hora_Fecha
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text14
  2146  00111C                     __ptext14:
  2147                           	opt stack 0
  2148  00111C                     _Parpadeo:
  2149                           	opt stack 29
  2150                           
  2151                           ;RTC.c: 104: uint8_t j=0;
  2152                           
  2153                           ;incstack = 0
  2154  00111C  0E00               	movlw	0
  2155  00111E  6E21               	movwf	Parpadeo@j,c
  2156                           
  2157                           ;RTC.c: 105: while(j<100 && (PORTAbits.RA0) && (PORTAbits.RA1))
  2158  001120  D005               	goto	l100
  2159  001122                     l894:
  2160                           
  2161                           ;RTC.c: 106: {
  2162                           ;RTC.c: 107: j++;
  2163  001122  2A21               	incf	Parpadeo@j,f,c
  2164                           
  2165                           ;RTC.c: 108: _delay((unsigned long)((5)*(800000/4000.0)));
  2166  001124  0EC8               	movlw	200
  2167  001126                     u1047:
  2168  001126  D000               	nop2	
  2169  001128  2EE8               	decfsz	wreg,f,c
  2170  00112A  D7FD               	bra	u1047
  2171  00112C                     l100:
  2172  00112C  0E64               	movlw	100
  2173  00112E  6021               	cpfslt	Parpadeo@j,c
  2174  001130  0012               	return	
  2175  001132  A080               	btfss	3968,0,c	;volatile
  2176  001134  0012               	return	
  2177  001136  A280               	btfss	3968,1,c	;volatile
  2178  001138  0012               	return	
  2179  00113A  D7F3               	goto	l894
  2180  00113C                     __end_of_Parpadeo:
  2181                           	opt stack 0
  2182                           tblptru	equ	0xFF8
  2183                           tblptrh	equ	0xFF7
  2184                           tblptrl	equ	0xFF6
  2185                           tablat	equ	0xFF5
  2186                           prodl	equ	0xFF3
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           postdec1	equ	0xFE5
  2190                           fsr1l	equ	0xFE1
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _LCD_PutC *****************
  2194 ;; Defined at:
  2195 ;;		line 91 in file "LCD_Librery.h"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  LCD_Char        1    wreg     unsigned char 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  LCD_Char        1    2[COMRAM] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0
  2210 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2212 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2213 ;;Total ram usage:        1 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    1
  2216 ;; This function calls:
  2217 ;;		_LCD_Write_Nibble
  2218 ;; This function is called by:
  2219 ;;		_Establecer_Hora_Fecha
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text15
  2224  001152                     __ptext15:
  2225                           	opt stack 0
  2226  001152                     _LCD_PutC:
  2227                           	opt stack 28
  2228                           
  2229                           ;incstack = 0
  2230                           ;LCD_PutC@LCD_Char stored from wreg
  2231  001152  6E23               	movwf	LCD_PutC@LCD_Char,c
  2232                           
  2233                           ;LCD_Librery.h: 93: RS = 1;
  2234  001154  803E               	bsf	_RS/(0+8),_RS& (0+7),c
  2235                           
  2236                           ;LCD_Librery.h: 94: LCD_Write_Nibble(LCD_Char >> 4);
  2237  001156  3823               	swapf	LCD_PutC@LCD_Char,w,c
  2238  001158  0B0F               	andlw	15
  2239  00115A  ECC6  F006         	call	_LCD_Write_Nibble
  2240                           
  2241                           ;LCD_Librery.h: 95: LCD_Write_Nibble(LCD_Char );
  2242  00115E  5023               	movf	LCD_PutC@LCD_Char,w,c
  2243  001160  ECC6  F006         	call	_LCD_Write_Nibble
  2244  001164  0012               	return		;funcret
  2245  001166                     __end_of_LCD_PutC:
  2246                           	opt stack 0
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           prodl	equ	0xFF3
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           postdec1	equ	0xFE5
  2255                           fsr1l	equ	0xFE1
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function _LCD_Print *****************
  2259 ;; Defined at:
  2260 ;;		line 98 in file "LCD_Librery.h"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  LCD_Str         2    2[COMRAM] PTR unsigned char 
  2263 ;;		 -> STR_1(3), Reloj_Calendario@Date(17), Reloj_Calendario@Time(15), 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  i               1    7[COMRAM] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2275 ;;      Params:         2       0       0       0       0       0       0       0       0
  2276 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2277 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2278 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2279 ;;Total ram usage:        6 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    1
  2282 ;; This function calls:
  2283 ;;		_LCD_Write_Nibble
  2284 ;; This function is called by:
  2285 ;;		_Reloj_Calendario
  2286 ;;		_Establecer_Hora_Fecha
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text16
  2291  000C1C                     __ptext16:
  2292                           	opt stack 0
  2293  000C1C                     _LCD_Print:
  2294                           	opt stack 28
  2295                           
  2296                           ;LCD_Librery.h: 100: uint8_t i = 0;
  2297                           
  2298                           ;incstack = 0
  2299  000C1C  0E00               	movlw	0
  2300  000C1E  6E28               	movwf	LCD_Print@i,c
  2301                           
  2302                           ;LCD_Librery.h: 101: RS = 1;
  2303  000C20  803E               	bsf	_RS/(0+8),_RS& (0+7),c
  2304                           
  2305                           ;LCD_Librery.h: 102: while(LCD_Str[i] != '\0')
  2306  000C22  D03C               	goto	l1286
  2307  000C24                     l1282:
  2308                           
  2309                           ;LCD_Librery.h: 103: {
  2310                           ;LCD_Librery.h: 104: LCD_Write_Nibble(LCD_Str[i] >> 4);
  2311  000C24  5028               	movf	LCD_Print@i,w,c
  2312  000C26  0D01               	mullw	1
  2313  000C28  C023  F025         	movff	LCD_Print@LCD_Str,??_LCD_Print
  2314  000C2C  C024  F026         	movff	LCD_Print@LCD_Str+1,??_LCD_Print+1
  2315  000C30  50F3               	movf	prodl,w,c
  2316  000C32  2625               	addwf	??_LCD_Print,f,c
  2317  000C34  50F4               	movf	prodh,w,c
  2318  000C36  2226               	addwfc	??_LCD_Print+1,f,c
  2319  000C38  C025  FFF6         	movff	??_LCD_Print,tblptrl
  2320  000C3C  C026  FFF7         	movff	??_LCD_Print+1,tblptrh
  2321  000C40  6AF8               	clrf	tblptru,c
  2322  000C42  0E07               	movlw	(high __ramtop+-1)
  2323  000C44  64F7               	cpfsgt	tblptrh,c
  2324  000C46  D003               	bra	u557
  2325  000C48  0008               	tblrd		*
  2326  000C4A  50F5               	movf	tablat,w,c
  2327  000C4C  D005               	bra	u550
  2328  000C4E                     u557:
  2329  000C4E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2330  000C52  CFF7 FFEA          	movff	tblptrh,fsr0h
  2331  000C56  50EF               	movf	indf0,w,c
  2332  000C58                     u550:
  2333  000C58  6E27               	movwf	(??_LCD_Print+2)& (0+255),c
  2334  000C5A  3827               	swapf	??_LCD_Print+2,w,c
  2335  000C5C  0B0F               	andlw	15
  2336  000C5E  ECC6  F006         	call	_LCD_Write_Nibble
  2337                           
  2338                           ;LCD_Librery.h: 105: LCD_Write_Nibble(LCD_Str[i++] );
  2339  000C62  5028               	movf	LCD_Print@i,w,c
  2340  000C64  0D01               	mullw	1
  2341  000C66  C023  F025         	movff	LCD_Print@LCD_Str,??_LCD_Print
  2342  000C6A  C024  F026         	movff	LCD_Print@LCD_Str+1,??_LCD_Print+1
  2343  000C6E  50F3               	movf	prodl,w,c
  2344  000C70  2625               	addwf	??_LCD_Print,f,c
  2345  000C72  50F4               	movf	prodh,w,c
  2346  000C74  2226               	addwfc	??_LCD_Print+1,f,c
  2347  000C76  C025  FFF6         	movff	??_LCD_Print,tblptrl
  2348  000C7A  C026  FFF7         	movff	??_LCD_Print+1,tblptrh
  2349  000C7E  6AF8               	clrf	tblptru,c
  2350  000C80  0E07               	movlw	(high __ramtop+-1)
  2351  000C82  64F7               	cpfsgt	tblptrh,c
  2352  000C84  D003               	bra	u567
  2353  000C86  0008               	tblrd		*
  2354  000C88  50F5               	movf	tablat,w,c
  2355  000C8A  D005               	bra	u560
  2356  000C8C                     u567:
  2357  000C8C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2358  000C90  CFF7 FFEA          	movff	tblptrh,fsr0h
  2359  000C94  50EF               	movf	indf0,w,c
  2360  000C96                     u560:
  2361  000C96  ECC6  F006         	call	_LCD_Write_Nibble
  2362  000C9A  2A28               	incf	LCD_Print@i,f,c
  2363  000C9C                     l1286:
  2364  000C9C  5028               	movf	LCD_Print@i,w,c
  2365  000C9E  0D01               	mullw	1
  2366  000CA0  C023  F025         	movff	LCD_Print@LCD_Str,??_LCD_Print
  2367  000CA4  C024  F026         	movff	LCD_Print@LCD_Str+1,??_LCD_Print+1
  2368  000CA8  50F3               	movf	prodl,w,c
  2369  000CAA  2625               	addwf	??_LCD_Print,f,c
  2370  000CAC  50F4               	movf	prodh,w,c
  2371  000CAE  2226               	addwfc	??_LCD_Print+1,f,c
  2372  000CB0  C025  FFF6         	movff	??_LCD_Print,tblptrl
  2373  000CB4  C026  FFF7         	movff	??_LCD_Print+1,tblptrh
  2374  000CB8  6AF8               	clrf	tblptru,c
  2375  000CBA  0E07               	movlw	(high __ramtop+-1)
  2376  000CBC  64F7               	cpfsgt	tblptrh,c
  2377  000CBE  D003               	bra	u577
  2378  000CC0  0008               	tblrd		*
  2379  000CC2  50F5               	movf	tablat,w,c
  2380  000CC4  D005               	bra	u570
  2381  000CC6                     u577:
  2382  000CC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2383  000CCA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2384  000CCE  50EF               	movf	indf0,w,c
  2385  000CD0                     u570:
  2386  000CD0  0900               	iorlw	0
  2387  000CD2  B4D8               	btfsc	status,2,c
  2388  000CD4  0012               	return	
  2389  000CD6  D7A6               	goto	l1282
  2390  000CD8                     __end_of_LCD_Print:
  2391                           	opt stack 0
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           indf0	equ	0xFEF
  2399                           postinc0	equ	0xFEE
  2400                           fsr0h	equ	0xFEA
  2401                           fsr0l	equ	0xFE9
  2402                           wreg	equ	0xFE8
  2403                           postdec1	equ	0xFE5
  2404                           fsr1l	equ	0xFE1
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _LCD_Goto *****************
  2408 ;; Defined at:
  2409 ;;		line 72 in file "LCD_Librery.h"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  col             1    wreg     unsigned char 
  2412 ;;  row             1    3[COMRAM] unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  col             1    4[COMRAM] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2424 ;;      Params:         1       0       0       0       0       0       0       0       0
  2425 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2427 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    2
  2431 ;; This function calls:
  2432 ;;		_LCD_Cmd
  2433 ;; This function is called by:
  2434 ;;		_Reloj_Calendario
  2435 ;;		_Establecer_Hora_Fecha
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text17
  2440  000FEE                     __ptext17:
  2441                           	opt stack 0
  2442  000FEE                     _LCD_Goto:
  2443                           	opt stack 27
  2444                           
  2445                           ;incstack = 0
  2446                           ;LCD_Goto@col stored from wreg
  2447  000FEE  6E25               	movwf	LCD_Goto@col,c
  2448                           
  2449                           ;LCD_Librery.h: 74: switch(row)
  2450  000FF0  D014               	goto	l1276
  2451  000FF2                     l1268:
  2452                           
  2453                           ;LCD_Librery.h: 77: LCD_Cmd(0xC0 + col - 1);
  2454  000FF2  5025               	movf	LCD_Goto@col,w,c
  2455  000FF4  0FBF               	addlw	191
  2456  000FF6  EC69  F008         	call	_LCD_Cmd
  2457                           
  2458                           ;LCD_Librery.h: 78: break;
  2459  000FFA  0012               	return	
  2460  000FFC                     l1270:
  2461                           
  2462                           ;LCD_Librery.h: 80: LCD_Cmd(0x94 + col - 1);
  2463  000FFC  5025               	movf	LCD_Goto@col,w,c
  2464  000FFE  0F93               	addlw	147
  2465  001000  EC69  F008         	call	_LCD_Cmd
  2466                           
  2467                           ;LCD_Librery.h: 81: break;
  2468  001004  0012               	return	
  2469  001006                     l1272:
  2470                           
  2471                           ;LCD_Librery.h: 83: LCD_Cmd(0xD4 + col - 1);
  2472  001006  5025               	movf	LCD_Goto@col,w,c
  2473  001008  0FD3               	addlw	211
  2474  00100A  EC69  F008         	call	_LCD_Cmd
  2475                           
  2476                           ;LCD_Librery.h: 84: break;
  2477  00100E  0012               	return	
  2478  001010                     l1274:
  2479                           
  2480                           ;LCD_Librery.h: 86: LCD_Cmd(0x80 + col - 1);
  2481  001010  5025               	movf	LCD_Goto@col,w,c
  2482  001012  0F7F               	addlw	127
  2483  001014  EC69  F008         	call	_LCD_Cmd
  2484                           
  2485                           ;LCD_Librery.h: 87: }
  2486  001018  0012               	return	
  2487  00101A                     l1276:
  2488  00101A  5024               	movf	LCD_Goto@row,w,c
  2489                           
  2490                           ; Switch size 1, requested type "space"
  2491                           ; Number of cases is 3, Range of values is 2 to 4
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte           10     6 (average)
  2495                           ;	Chosen strategy is simple_byte
  2496  00101C  0A02               	xorlw	2	; case 2
  2497  00101E  B4D8               	btfsc	status,2,c
  2498  001020  D7E8               	goto	l1268
  2499  001022  0A01               	xorlw	1	; case 3
  2500  001024  B4D8               	btfsc	status,2,c
  2501  001026  D7EA               	goto	l1270
  2502  001028  0A07               	xorlw	7	; case 4
  2503  00102A  B4D8               	btfsc	status,2,c
  2504  00102C  D7EC               	goto	l1272
  2505  00102E  D7F0               	goto	l1274
  2506  001030                     __end_of_LCD_Goto:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           prodh	equ	0xFF4
  2513                           prodl	equ	0xFF3
  2514                           indf0	equ	0xFEF
  2515                           postinc0	equ	0xFEE
  2516                           fsr0h	equ	0xFEA
  2517                           fsr0l	equ	0xFE9
  2518                           wreg	equ	0xFE8
  2519                           postdec1	equ	0xFE5
  2520                           fsr1l	equ	0xFE1
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function _LCD_Cmd *****************
  2524 ;; Defined at:
  2525 ;;		line 63 in file "LCD_Librery.h"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  Command         1    wreg     unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  Command         1    2[COMRAM] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2539 ;;      Params:         0       0       0       0       0       0       0       0       0
  2540 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2542 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2543 ;;Total ram usage:        1 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    1
  2546 ;; This function calls:
  2547 ;;		_LCD_Write_Nibble
  2548 ;; This function is called by:
  2549 ;;		_LCD_Goto
  2550 ;;		_LCD_Begin
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text18
  2555  0010D2                     __ptext18:
  2556                           	opt stack 0
  2557  0010D2                     _LCD_Cmd:
  2558                           	opt stack 27
  2559                           
  2560                           ;incstack = 0
  2561                           ;LCD_Cmd@Command stored from wreg
  2562  0010D2  6E23               	movwf	LCD_Cmd@Command,c
  2563                           
  2564                           ;LCD_Librery.h: 65: RS = 0;
  2565  0010D4  903E               	bcf	_RS/(0+8),_RS& (0+7),c
  2566                           
  2567                           ;LCD_Librery.h: 66: LCD_Write_Nibble(Command >> 4);
  2568  0010D6  3823               	swapf	LCD_Cmd@Command,w,c
  2569  0010D8  0B0F               	andlw	15
  2570  0010DA  ECC6  F006         	call	_LCD_Write_Nibble
  2571                           
  2572                           ;LCD_Librery.h: 67: LCD_Write_Nibble(Command);
  2573  0010DE  5023               	movf	LCD_Cmd@Command,w,c
  2574  0010E0  ECC6  F006         	call	_LCD_Write_Nibble
  2575                           
  2576                           ;LCD_Librery.h: 68: if((Command == 0x01) || (Command == 0x02))
  2577  0010E4  0423               	decf	LCD_Cmd@Command,w,c
  2578  0010E6  B4D8               	btfsc	status,2,c
  2579  0010E8  D004               	goto	l834
  2580  0010EA  0E02               	movlw	2
  2581  0010EC  1823               	xorwf	LCD_Cmd@Command,w,c
  2582  0010EE  A4D8               	btfss	status,2,c
  2583  0010F0  0012               	return	
  2584  0010F2                     l834:
  2585                           
  2586                           ;LCD_Librery.h: 69: _delay((unsigned long)((2)*(800000/4000.0)));
  2587  0010F2  0E85               	movlw	133
  2588  0010F4                     u1057:
  2589  0010F4  2EE8               	decfsz	wreg,f,c
  2590  0010F6  D7FE               	bra	u1057
  2591  0010F8  F000               	nop	
  2592  0010FA  0012               	return	
  2593  0010FC                     __end_of_LCD_Cmd:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           prodh	equ	0xFF4
  2600                           prodl	equ	0xFF3
  2601                           indf0	equ	0xFEF
  2602                           postinc0	equ	0xFEE
  2603                           fsr0h	equ	0xFEA
  2604                           fsr0l	equ	0xFE9
  2605                           wreg	equ	0xFE8
  2606                           postdec1	equ	0xFE5
  2607                           fsr1l	equ	0xFE1
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _LCD_Write_Nibble *****************
  2611 ;; Defined at:
  2612 ;;		line 46 in file "LCD_Librery.h"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  n               1    wreg     unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  n               1    1[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0
  2627 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2628 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2629 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2630 ;;Total ram usage:        2 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_LCD_Cmd
  2636 ;;		_LCD_PutC
  2637 ;;		_LCD_Print
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text19
  2642  000D8C                     __ptext19:
  2643                           	opt stack 0
  2644  000D8C                     _LCD_Write_Nibble:
  2645                           	opt stack 28
  2646                           
  2647                           ;incstack = 0
  2648                           ;LCD_Write_Nibble@n stored from wreg
  2649  000D8C  6E22               	movwf	LCD_Write_Nibble@n,c
  2650                           
  2651                           ;LCD_Librery.h: 48: LATDbits.LD0 = RS;
  2652  000D8E  A03E               	btfss	_RS/(0+8),_RS& (0+7),c
  2653  000D90  D002               	bra	u15
  2654  000D92  808C               	bsf	3980,0,c	;volatile
  2655  000D94  D001               	bra	u17
  2656  000D96                     u15:
  2657  000D96  908C               	bcf	3980,0,c	;volatile
  2658  000D98                     u17:
  2659                           
  2660                           ;LCD_Librery.h: 49: LATDbits.LD2 = n & 0x01;
  2661  000D98  C022  F021         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  2662  000D9C  0E01               	movlw	1
  2663  000D9E  1621               	andwf	??_LCD_Write_Nibble,f,c
  2664  000DA0  4621               	rlncf	??_LCD_Write_Nibble,f,c
  2665  000DA2  4621               	rlncf	??_LCD_Write_Nibble,f,c
  2666  000DA4  508C               	movf	3980,w,c	;volatile
  2667  000DA6  1821               	xorwf	??_LCD_Write_Nibble,w,c
  2668  000DA8  0BFB               	andlw	-5
  2669  000DAA  1821               	xorwf	??_LCD_Write_Nibble,w,c
  2670  000DAC  6E8C               	movwf	3980,c	;volatile
  2671                           
  2672                           ;LCD_Librery.h: 50: LATDbits.LD3 = (n >> 1) & 0x01;
  2673  000DAE  C022  F021         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  2674  000DB2  90D8               	bcf	status,0,c
  2675  000DB4  3221               	rrcf	??_LCD_Write_Nibble,f,c
  2676  000DB6  0E01               	movlw	1
  2677  000DB8  1621               	andwf	??_LCD_Write_Nibble,f,c
  2678  000DBA  4621               	rlncf	??_LCD_Write_Nibble,f,c
  2679  000DBC  4621               	rlncf	??_LCD_Write_Nibble,f,c
  2680  000DBE  4621               	rlncf	??_LCD_Write_Nibble,f,c
  2681  000DC0  508C               	movf	3980,w,c	;volatile
  2682  000DC2  1821               	xorwf	??_LCD_Write_Nibble,w,c
  2683  000DC4  0BF7               	andlw	-9
  2684  000DC6  1821               	xorwf	??_LCD_Write_Nibble,w,c
  2685  000DC8  6E8C               	movwf	3980,c	;volatile
  2686                           
  2687                           ;LCD_Librery.h: 51: LATDbits.LD4 = (n >> 2) & 0x01;
  2688  000DCA  C022  F021         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  2689  000DCE  90D8               	bcf	status,0,c
  2690  000DD0  3221               	rrcf	??_LCD_Write_Nibble,f,c
  2691  000DD2  90D8               	bcf	status,0,c
  2692  000DD4  3221               	rrcf	??_LCD_Write_Nibble,f,c
  2693  000DD6  0E01               	movlw	1
  2694  000DD8  1621               	andwf	??_LCD_Write_Nibble,f,c
  2695  000DDA  3A21               	swapf	??_LCD_Write_Nibble,f,c
  2696  000DDC  508C               	movf	3980,w,c	;volatile
  2697  000DDE  1821               	xorwf	??_LCD_Write_Nibble,w,c
  2698  000DE0  0BEF               	andlw	-17
  2699  000DE2  1821               	xorwf	??_LCD_Write_Nibble,w,c
  2700  000DE4  6E8C               	movwf	3980,c	;volatile
  2701                           
  2702                           ;LCD_Librery.h: 52: LATDbits.LD5 = (n >> 3) & 0x01;
  2703  000DE6  C022  F021         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  2704  000DEA  90D8               	bcf	status,0,c
  2705  000DEC  3221               	rrcf	??_LCD_Write_Nibble,f,c
  2706  000DEE  90D8               	bcf	status,0,c
  2707  000DF0  3221               	rrcf	??_LCD_Write_Nibble,f,c
  2708  000DF2  90D8               	bcf	status,0,c
  2709  000DF4  3221               	rrcf	??_LCD_Write_Nibble,f,c
  2710  000DF6  0E01               	movlw	1
  2711  000DF8  1621               	andwf	??_LCD_Write_Nibble,f,c
  2712  000DFA  3A21               	swapf	??_LCD_Write_Nibble,f,c
  2713  000DFC  4621               	rlncf	??_LCD_Write_Nibble,f,c
  2714  000DFE  508C               	movf	3980,w,c	;volatile
  2715  000E00  1821               	xorwf	??_LCD_Write_Nibble,w,c
  2716  000E02  0BDF               	andlw	-33
  2717  000E04  1821               	xorwf	??_LCD_Write_Nibble,w,c
  2718  000E06  6E8C               	movwf	3980,c	;volatile
  2719                           
  2720                           ;LCD_Librery.h: 55: LATDbits.LD1 = 0;
  2721  000E08  928C               	bcf	3980,1,c	;volatile
  2722                           
  2723                           ;LCD_Librery.h: 57: LATDbits.LD1 = 1;
  2724                           
  2725                           ;LCD_Librery.h: 56: _delay((unsigned long)((1)*(800000/4000000.0)));
  2726  000E0A  828C               	bsf	3980,1,c	;volatile
  2727                           
  2728                           ;LCD_Librery.h: 59: LATDbits.LD1 = 0;
  2729                           
  2730                           ;LCD_Librery.h: 58: _delay((unsigned long)((1)*(800000/4000000.0)));
  2731  000E0C  928C               	bcf	3980,1,c	;volatile
  2732                           
  2733                           ;LCD_Librery.h: 60: _delay((unsigned long)((100)*(800000/4000000.0)));
  2734  000E0E  0E06               	movlw	6
  2735  000E10                     u1067:
  2736  000E10  2EE8               	decfsz	wreg,f,c
  2737  000E12  D7FE               	bra	u1067
  2738  000E14  D000               	nop2	
  2739  000E16  0012               	return		;funcret
  2740  000E18                     __end_of_LCD_Write_Nibble:
  2741                           	opt stack 0
  2742                           tblptru	equ	0xFF8
  2743                           tblptrh	equ	0xFF7
  2744                           tblptrl	equ	0xFF6
  2745                           tablat	equ	0xFF5
  2746                           prodh	equ	0xFF4
  2747                           prodl	equ	0xFF3
  2748                           indf0	equ	0xFEF
  2749                           postinc0	equ	0xFEE
  2750                           fsr0h	equ	0xFEA
  2751                           fsr0l	equ	0xFE9
  2752                           wreg	equ	0xFE8
  2753                           postdec1	equ	0xFE5
  2754                           fsr1l	equ	0xFE1
  2755                           status	equ	0xFD8
  2756                           
  2757 ;; *************** function _Anti_rebote *****************
  2758 ;; Defined at:
  2759 ;;		line 33 in file "RTC.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  i               1    2[COMRAM] unsigned char 
  2764 ;;  contador        1    1[COMRAM] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0
  2775 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2776 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2777 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2778 ;;Total ram usage:        3 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_Establecer_Hora_Fecha
  2784 ;;		_main
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text20
  2789  00109E                     __ptext20:
  2790                           	opt stack 0
  2791  00109E                     _Anti_rebote:
  2792                           	opt stack 29
  2793                           
  2794                           ;RTC.c: 35: uint8_t contador = 0;
  2795                           
  2796                           ;incstack = 0
  2797  00109E  0E00               	movlw	0
  2798  0010A0  6E22               	movwf	Anti_rebote@contador,c
  2799                           
  2800                           ;RTC.c: 36: for(uint8_t i=0;i<5;i++)
  2801  0010A2  0E00               	movlw	0
  2802  0010A4  6E23               	movwf	Anti_rebote@i,c
  2803  0010A6                     l864:
  2804  0010A6  0E04               	movlw	4
  2805  0010A8  6423               	cpfsgt	Anti_rebote@i,c
  2806  0010AA  D001               	goto	l79
  2807  0010AC  D00B               	goto	l876
  2808  0010AE                     l79:
  2809                           
  2810                           ;RTC.c: 37: {
  2811                           ;RTC.c: 38: if((PORTAbits.RA0) == 0)
  2812  0010AE  A080               	btfss	3968,0,c	;volatile
  2813                           
  2814                           ;RTC.c: 39: contador++;
  2815  0010B0  2A22               	incf	Anti_rebote@contador,f,c
  2816                           
  2817                           ;RTC.c: 40: _delay((unsigned long)((10)*(800000/4000.0)));
  2818  0010B2  0E03               	movlw	3
  2819  0010B4  6E21               	movwf	??_Anti_rebote& (0+255),c
  2820  0010B6  0E98               	movlw	152
  2821  0010B8                     u1077:
  2822  0010B8  2EE8               	decfsz	wreg,f,c
  2823  0010BA  D7FE               	bra	u1077
  2824  0010BC  2E21               	decfsz	??_Anti_rebote& (0+255),f,c
  2825  0010BE  D7FC               	bra	u1077
  2826  0010C0  2A23               	incf	Anti_rebote@i,f,c
  2827  0010C2  D7F1               	goto	l864
  2828  0010C4                     l876:
  2829                           
  2830                           ;RTC.c: 41: }
  2831                           ;RTC.c: 42: if(contador>2)
  2832  0010C4  0E02               	movlw	2
  2833  0010C6  6422               	cpfsgt	Anti_rebote@contador,c
  2834  0010C8  D002               	goto	l884
  2835                           
  2836                           ;RTC.c: 43: {
  2837                           ;RTC.c: 44: return 1;
  2838  0010CA  80D8               	bsf	status,0,c
  2839                           
  2840                           ;RTC.c: 45: }
  2841  0010CC  0012               	return	
  2842  0010CE                     l884:
  2843                           
  2844                           ;RTC.c: 46: else
  2845                           ;RTC.c: 47: {
  2846                           ;RTC.c: 48: return 0;
  2847  0010CE  90D8               	bcf	status,0,c
  2848  0010D0  0012               	return	
  2849  0010D2                     __end_of_Anti_rebote:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           prodh	equ	0xFF4
  2856                           prodl	equ	0xFF3
  2857                           indf0	equ	0xFEF
  2858                           postinc0	equ	0xFEE
  2859                           fsr0h	equ	0xFEA
  2860                           fsr0l	equ	0xFE9
  2861                           wreg	equ	0xFE8
  2862                           postdec1	equ	0xFE5
  2863                           fsr1l	equ	0xFE1
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function _Decimal_a_BCD *****************
  2867 ;; Defined at:
  2868 ;;		line 61 in file "RTC.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  numero          1    wreg     unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  numero          1   10[COMRAM] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      unsigned char 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0
  2883 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2884 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2885 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2886 ;;Total ram usage:        3 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    1
  2889 ;; This function calls:
  2890 ;;		___awdiv
  2891 ;;		___awmod
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text21
  2898  001068                     __ptext21:
  2899                           	opt stack 0
  2900  001068                     _Decimal_a_BCD:
  2901                           	opt stack 29
  2902                           
  2903                           ;incstack = 0
  2904                           ;Decimal_a_BCD@numero stored from wreg
  2905  001068  6E2B               	movwf	Decimal_a_BCD@numero,c
  2906                           
  2907                           ;RTC.c: 63: return (((numero / 10) << 4) + (numero % 10));
  2908  00106A  C02B  F021         	movff	Decimal_a_BCD@numero,___awmod@dividend
  2909  00106E  6A22               	clrf	___awmod@dividend+1,c
  2910  001070  0E00               	movlw	0
  2911  001072  6E24               	movwf	___awmod@divisor+1,c
  2912  001074  0E0A               	movlw	10
  2913  001076  6E23               	movwf	___awmod@divisor,c
  2914  001078  EC8F  F007         	call	___awmod	;wreg free
  2915  00107C  C021  F029         	movff	?___awmod,??_Decimal_a_BCD
  2916  001080  C022  F02A         	movff	?___awmod+1,??_Decimal_a_BCD+1
  2917  001084  C02B  F021         	movff	Decimal_a_BCD@numero,___awdiv@dividend
  2918  001088  6A22               	clrf	___awdiv@dividend+1,c
  2919  00108A  0E00               	movlw	0
  2920  00108C  6E24               	movwf	___awdiv@divisor+1,c
  2921  00108E  0E0A               	movlw	10
  2922  001090  6E23               	movwf	___awdiv@divisor,c
  2923  001092  EC0C  F007         	call	___awdiv	;wreg free
  2924  001096  3821               	swapf	?___awdiv,w,c
  2925  001098  0BF0               	andlw	240
  2926  00109A  2429               	addwf	??_Decimal_a_BCD,w,c
  2927  00109C  0012               	return	
  2928  00109E                     __end_of_Decimal_a_BCD:
  2929                           	opt stack 0
  2930                           tblptru	equ	0xFF8
  2931                           tblptrh	equ	0xFF7
  2932                           tblptrl	equ	0xFF6
  2933                           tablat	equ	0xFF5
  2934                           prodh	equ	0xFF4
  2935                           prodl	equ	0xFF3
  2936                           indf0	equ	0xFEF
  2937                           postinc0	equ	0xFEE
  2938                           fsr0h	equ	0xFEA
  2939                           fsr0l	equ	0xFE9
  2940                           wreg	equ	0xFE8
  2941                           postdec1	equ	0xFE5
  2942                           fsr1l	equ	0xFE1
  2943                           status	equ	0xFD8
  2944                           
  2945 ;; *************** function ___awmod *****************
  2946 ;; Defined at:
  2947 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  dividend        2    0[COMRAM] int 
  2950 ;;  divisor         2    2[COMRAM] int 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  sign            1    5[COMRAM] unsigned char 
  2953 ;;  counter         1    4[COMRAM] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2    0[COMRAM] int 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2963 ;;      Params:         4       0       0       0       0       0       0       0       0
  2964 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2966 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2967 ;;Total ram usage:        6 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_Decimal_a_BCD
  2973 ;;		_Reloj_Calendario
  2974 ;;		_Establecer_Hora_Fecha
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text22
  2979  000F1E                     __ptext22:
  2980                           	opt stack 0
  2981  000F1E                     ___awmod:
  2982                           	opt stack 29
  2983                           
  2984                           ;incstack = 0
  2985  000F1E  0E00               	movlw	0
  2986  000F20  6E26               	movwf	___awmod@sign,c
  2987  000F22  AE22               	btfss	___awmod@dividend+1,7,c
  2988  000F24  D006               	goto	l1340
  2989  000F26  6C21               	negf	___awmod@dividend,c
  2990  000F28  1E22               	comf	___awmod@dividend+1,f,c
  2991  000F2A  B0D8               	btfsc	status,0,c
  2992  000F2C  2A22               	incf	___awmod@dividend+1,f,c
  2993  000F2E  0E01               	movlw	1
  2994  000F30  6E26               	movwf	___awmod@sign,c
  2995  000F32                     l1340:
  2996  000F32  AE24               	btfss	___awmod@divisor+1,7,c
  2997  000F34  D004               	goto	l1344
  2998  000F36  6C23               	negf	___awmod@divisor,c
  2999  000F38  1E24               	comf	___awmod@divisor+1,f,c
  3000  000F3A  B0D8               	btfsc	status,0,c
  3001  000F3C  2A24               	incf	___awmod@divisor+1,f,c
  3002  000F3E                     l1344:
  3003  000F3E  5023               	movf	___awmod@divisor,w,c
  3004  000F40  1024               	iorwf	___awmod@divisor+1,w,c
  3005  000F42  B4D8               	btfsc	status,2,c
  3006  000F44  D018               	goto	l1360
  3007  000F46  0E01               	movlw	1
  3008  000F48  6E25               	movwf	___awmod@counter,c
  3009  000F4A  D004               	goto	l1350
  3010  000F4C                     l1348:
  3011  000F4C  90D8               	bcf	status,0,c
  3012  000F4E  3623               	rlcf	___awmod@divisor,f,c
  3013  000F50  3624               	rlcf	___awmod@divisor+1,f,c
  3014  000F52  2A25               	incf	___awmod@counter,f,c
  3015  000F54                     l1350:
  3016  000F54  AE24               	btfss	___awmod@divisor+1,7,c
  3017  000F56  D7FA               	goto	l1348
  3018  000F58                     l1352:
  3019  000F58  5023               	movf	___awmod@divisor,w,c
  3020  000F5A  5C21               	subwf	___awmod@dividend,w,c
  3021  000F5C  5024               	movf	___awmod@divisor+1,w,c
  3022  000F5E  5822               	subwfb	___awmod@dividend+1,w,c
  3023  000F60  A0D8               	btfss	status,0,c
  3024  000F62  D004               	goto	l1356
  3025  000F64  5023               	movf	___awmod@divisor,w,c
  3026  000F66  5E21               	subwf	___awmod@dividend,f,c
  3027  000F68  5024               	movf	___awmod@divisor+1,w,c
  3028  000F6A  5A22               	subwfb	___awmod@dividend+1,f,c
  3029  000F6C                     l1356:
  3030  000F6C  90D8               	bcf	status,0,c
  3031  000F6E  3224               	rrcf	___awmod@divisor+1,f,c
  3032  000F70  3223               	rrcf	___awmod@divisor,f,c
  3033  000F72  2E25               	decfsz	___awmod@counter,f,c
  3034  000F74  D7F1               	goto	l1352
  3035  000F76                     l1360:
  3036  000F76  5026               	movf	___awmod@sign,w,c
  3037  000F78  B4D8               	btfsc	status,2,c
  3038  000F7A  D004               	goto	l1364
  3039  000F7C  6C21               	negf	___awmod@dividend,c
  3040  000F7E  1E22               	comf	___awmod@dividend+1,f,c
  3041  000F80  B0D8               	btfsc	status,0,c
  3042  000F82  2A22               	incf	___awmod@dividend+1,f,c
  3043  000F84                     l1364:
  3044  000F84  C021  F021         	movff	___awmod@dividend,?___awmod
  3045  000F88  C022  F022         	movff	___awmod@dividend+1,?___awmod+1
  3046  000F8C  0012               	return	
  3047  000F8E                     __end_of___awmod:
  3048                           	opt stack 0
  3049                           tblptru	equ	0xFF8
  3050                           tblptrh	equ	0xFF7
  3051                           tblptrl	equ	0xFF6
  3052                           tablat	equ	0xFF5
  3053                           prodh	equ	0xFF4
  3054                           prodl	equ	0xFF3
  3055                           indf0	equ	0xFEF
  3056                           postinc0	equ	0xFEE
  3057                           fsr0h	equ	0xFEA
  3058                           fsr0l	equ	0xFE9
  3059                           wreg	equ	0xFE8
  3060                           postdec1	equ	0xFE5
  3061                           fsr1l	equ	0xFE1
  3062                           status	equ	0xFD8
  3063                           
  3064 ;; *************** function ___awdiv *****************
  3065 ;; Defined at:
  3066 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  dividend        2    0[COMRAM] int 
  3069 ;;  divisor         2    2[COMRAM] int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  quotient        2    6[COMRAM] int 
  3072 ;;  sign            1    5[COMRAM] unsigned char 
  3073 ;;  counter         1    4[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    0[COMRAM] int 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3083 ;;      Params:         4       0       0       0       0       0       0       0       0
  3084 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3086 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3087 ;;Total ram usage:        8 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_Decimal_a_BCD
  3093 ;;		_Reloj_Calendario
  3094 ;;		_Establecer_Hora_Fecha
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text23
  3099  000E18                     __ptext23:
  3100                           	opt stack 0
  3101  000E18                     ___awdiv:
  3102                           	opt stack 29
  3103                           
  3104                           ;incstack = 0
  3105  000E18  0E00               	movlw	0
  3106  000E1A  6E26               	movwf	___awdiv@sign,c
  3107  000E1C  AE24               	btfss	___awdiv@divisor+1,7,c
  3108  000E1E  D006               	goto	l1296
  3109  000E20  6C23               	negf	___awdiv@divisor,c
  3110  000E22  1E24               	comf	___awdiv@divisor+1,f,c
  3111  000E24  B0D8               	btfsc	status,0,c
  3112  000E26  2A24               	incf	___awdiv@divisor+1,f,c
  3113  000E28  0E01               	movlw	1
  3114  000E2A  6E26               	movwf	___awdiv@sign,c
  3115  000E2C                     l1296:
  3116  000E2C  AE22               	btfss	___awdiv@dividend+1,7,c
  3117  000E2E  D006               	goto	l1302
  3118  000E30  6C21               	negf	___awdiv@dividend,c
  3119  000E32  1E22               	comf	___awdiv@dividend+1,f,c
  3120  000E34  B0D8               	btfsc	status,0,c
  3121  000E36  2A22               	incf	___awdiv@dividend+1,f,c
  3122  000E38  0E01               	movlw	1
  3123  000E3A  1A26               	xorwf	___awdiv@sign,f,c
  3124  000E3C                     l1302:
  3125  000E3C  0E00               	movlw	0
  3126  000E3E  6E28               	movwf	___awdiv@quotient+1,c
  3127  000E40  0E00               	movlw	0
  3128  000E42  6E27               	movwf	___awdiv@quotient,c
  3129  000E44  5023               	movf	___awdiv@divisor,w,c
  3130  000E46  1024               	iorwf	___awdiv@divisor+1,w,c
  3131  000E48  B4D8               	btfsc	status,2,c
  3132  000E4A  D01C               	goto	l1324
  3133  000E4C  0E01               	movlw	1
  3134  000E4E  6E25               	movwf	___awdiv@counter,c
  3135  000E50  D004               	goto	l1310
  3136  000E52                     l1308:
  3137  000E52  90D8               	bcf	status,0,c
  3138  000E54  3623               	rlcf	___awdiv@divisor,f,c
  3139  000E56  3624               	rlcf	___awdiv@divisor+1,f,c
  3140  000E58  2A25               	incf	___awdiv@counter,f,c
  3141  000E5A                     l1310:
  3142  000E5A  AE24               	btfss	___awdiv@divisor+1,7,c
  3143  000E5C  D7FA               	goto	l1308
  3144  000E5E                     l1312:
  3145  000E5E  90D8               	bcf	status,0,c
  3146  000E60  3627               	rlcf	___awdiv@quotient,f,c
  3147  000E62  3628               	rlcf	___awdiv@quotient+1,f,c
  3148  000E64  5023               	movf	___awdiv@divisor,w,c
  3149  000E66  5C21               	subwf	___awdiv@dividend,w,c
  3150  000E68  5024               	movf	___awdiv@divisor+1,w,c
  3151  000E6A  5822               	subwfb	___awdiv@dividend+1,w,c
  3152  000E6C  A0D8               	btfss	status,0,c
  3153  000E6E  D005               	goto	l1320
  3154  000E70  5023               	movf	___awdiv@divisor,w,c
  3155  000E72  5E21               	subwf	___awdiv@dividend,f,c
  3156  000E74  5024               	movf	___awdiv@divisor+1,w,c
  3157  000E76  5A22               	subwfb	___awdiv@dividend+1,f,c
  3158  000E78  8027               	bsf	___awdiv@quotient,0,c
  3159  000E7A                     l1320:
  3160  000E7A  90D8               	bcf	status,0,c
  3161  000E7C  3224               	rrcf	___awdiv@divisor+1,f,c
  3162  000E7E  3223               	rrcf	___awdiv@divisor,f,c
  3163  000E80  2E25               	decfsz	___awdiv@counter,f,c
  3164  000E82  D7ED               	goto	l1312
  3165  000E84                     l1324:
  3166  000E84  5026               	movf	___awdiv@sign,w,c
  3167  000E86  B4D8               	btfsc	status,2,c
  3168  000E88  D004               	goto	l1328
  3169  000E8A  6C27               	negf	___awdiv@quotient,c
  3170  000E8C  1E28               	comf	___awdiv@quotient+1,f,c
  3171  000E8E  B0D8               	btfsc	status,0,c
  3172  000E90  2A28               	incf	___awdiv@quotient+1,f,c
  3173  000E92                     l1328:
  3174  000E92  C027  F021         	movff	___awdiv@quotient,?___awdiv
  3175  000E96  C028  F022         	movff	___awdiv@quotient+1,?___awdiv+1
  3176  000E9A  0012               	return	
  3177  000E9C                     __end_of___awdiv:
  3178                           	opt stack 0
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           prodh	equ	0xFF4
  3184                           prodl	equ	0xFF3
  3185                           indf0	equ	0xFEF
  3186                           postinc0	equ	0xFEE
  3187                           fsr0h	equ	0xFEA
  3188                           fsr0l	equ	0xFE9
  3189                           wreg	equ	0xFE8
  3190                           postdec1	equ	0xFE5
  3191                           fsr1l	equ	0xFE1
  3192                           status	equ	0xFD8
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           indf0	equ	0xFEF
  3200                           postinc0	equ	0xFEE
  3201                           fsr0h	equ	0xFEA
  3202                           fsr0l	equ	0xFE9
  3203                           wreg	equ	0xFE8
  3204                           postdec1	equ	0xFE5
  3205                           fsr1l	equ	0xFE1
  3206                           status	equ	0xFD8
  3207                           
  3208                           	psect	rparam
  3209  0000                     tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           indf0	equ	0xFEF
  3216                           postinc0	equ	0xFEE
  3217                           fsr0h	equ	0xFEA
  3218                           fsr0l	equ	0xFE9
  3219                           wreg	equ	0xFE8
  3220                           postdec1	equ	0xFE5
  3221                           fsr1l	equ	0xFE1
  3222                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      62
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[3]), Reloj_Calendario@Date(COMRAM[17]), Reloj_Calendario@Time(COMRAM[15]), 


Critical Paths under _main in COMRAM

    _main->_I2C_Init
    _Reloj_Calendario->_LCD_Print
    _Reloj_Calendario->___awdiv
    _LCD_Begin->_LCD_Cmd
    _I2C_Init->___lldiv
    _Establecer_Hora_Fecha->_LCD_Print
    _Establecer_Hora_Fecha->___awdiv
    _LCD_PutC->_LCD_Write_Nibble
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _Decimal_a_BCD->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12350
                                             21 COMRAM     1     1      0
                        _Anti_rebote
                      _Decimal_a_BCD
              _Establecer_Hora_Fecha
                            _I2C_Ack
                           _I2C_Init
                         _I2C_NO_Ack
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _LCD_Begin
                   _Reloj_Calendario
 ---------------------------------------------------------------------------------
 (1) _Reloj_Calendario                                     0     0      0    3866
                      _BCD_a_Decimal
                           _LCD_Goto
                          _LCD_Print
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _BCD_a_Decimal                                        2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            1     1      0     120
                                              3 COMRAM     1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_NO_Ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     376
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Establecer_Hora_Fecha                                4     2      2    4984
                                              8 COMRAM     4     2      2
                        _Anti_rebote
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                           _Parpadeo
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _Parpadeo                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_PutC                                             1     1      0      90
                                              2 COMRAM     1     1      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            6     4      2     386
                                              2 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             2     1      1     550
                                              3 COMRAM     2     1      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              1     1      0     120
                                              2 COMRAM     1     1      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Anti_rebote                                          3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Decimal_a_BCD                                        3     3      0    2944
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Anti_rebote
   _Decimal_a_BCD
     ___awdiv
     ___awmod
   _Establecer_Hora_Fecha
     _Anti_rebote
     _LCD_Goto
       _LCD_Cmd
         _LCD_Write_Nibble
     _LCD_Print
       _LCD_Write_Nibble
     _LCD_PutC
       _LCD_Write_Nibble
     _Parpadeo
     ___awdiv
     ___awmod
   _I2C_Ack
   _I2C_Init
     ___lldiv
   _I2C_NO_Ack
   _I2C_ReStart
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _Reloj_Calendario
     _BCD_a_Decimal
     _LCD_Goto
       _LCD_Cmd
         _LCD_Write_Nibble
     _LCD_Print
       _LCD_Write_Nibble
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     16      3E       1       65.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      20        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Oct 11 19:20:43 2021

           __size_of_I2C_NO_Ack 000C                               _i 0037              __size_of_I2C_Start 0008  
                   _SSPSTATbits 000FC7              __size_of_I2C_Write 000E                              l79 10AE  
                            u15 0D96                              u17 0D98                              _RS 01F0  
                  ___awdiv@sign 0026                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l100 112C                             l163 11AA                             l181 1186  
                           l157 11A2                             l175 1192                             l193 1178  
                           l169 119A                             l187 116E                             l546 0F0C  
                           l834 10F2                             l864 10A6                             l884 10CE  
                           l876 10C4                             l894 1122                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             u550 0C58                             u560 0C96  
                           u570 0CD0                             u557 0C4E                             u567 0C8C  
                           u577 0CC6                             u927 0A7C                             u937 0AF0  
                           u947 0CF8                             u885 0FC6                             u957 0D0A  
                           u967 0D18                             u977 0D26                             u987 0D34  
                           u997 0D46                    __CFG_BOR$OFF 000000                             _day 0038  
               __end_of_I2C_Ack 1198            __size_of_I2C_ReStart 0008                    ___awmod@sign 0026  
                           wreg 000FE8                 __end_of_LCD_Cmd 10FC                    __CFG_LVP$OFF 000000  
                  __CFG_WDT$OFF 000000                            l1310 0E5A                            l1302 0E3C  
                          l1320 0E7A                            l1312 0E5E                            l1308 0E52  
                          l1324 0E84                            l1340 0F32                            l1350 0F54  
                          l1270 0FFC                            l1430 0AFC                            l1328 0E92  
                          l1352 0F58                            l1360 0F76                            l1344 0F3E  
                          l1272 1006                            l1440 0B18                            l1432 0B06  
                          l1274 1010                            l1282 0C24                            l1364 0F84  
                          l1356 0F6C                            l1348 0F4C                            l1268 0FF2  
                          l1276 101A                            l1452 0B3A                            l1286 0C9C  
                          l1446 0B28                            l1374 0EBE                            l1534 0A08  
                          l1518 09A8                            l1296 0E2C                            l1464 0B5E  
                          l1472 0BAA                            l1376 0ECA                            l1458 0B4C  
                          l1386 0EFE                            l1378 0ECE                            l1562 0A84  
             ?_LCD_Write_Nibble 0021                            STR_1 0801                            u1007 0D5A  
                          u1017 0D6E                            u1027 0D82                            u1037 0BA2  
                          u1047 1126                            u1057 10F4                            u1067 0E10  
                          u1077 10B8              ??_LCD_Write_Nibble 0021                            _main 0984  
            __size_of_LCD_Begin 00B4                __end_of_I2C_Init 0FEE                __end_of_I2C_Read 1180  
                          _year 003A                            fsr0h 000FEA                            indf0 000FEF  
                          fsr0l 000FE9                            fsr1l 000FE1                __end_of_I2C_Stop 11A0  
           __end_of_Anti_rebote 10D2                            prodh 000FF4                            prodl 000FF3  
            __size_of_LCD_Print 00BC                            start 0000                   __CFG_IESO$OFF 000000  
           Anti_rebote@contador 0022                     LCD_Goto@col 0025                     LCD_Goto@row 0024  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000                __end_of_LCD_Goto 1030  
              __end_of_LCD_PutC 1166                   __CFG_PLLDIV$1 000000                  __CFG_CCP2MX$ON 000000  
                         ?_main 0021                 __end_of___awdiv 0E9C                 __end_of___awmod 0F8E  
               __end_of___lldiv 0F1E                 ___awdiv@divisor 0023                 ___awdiv@counter 0025  
                 __CFG_USBDIV$1 000000                           _TRISA 000F92                           _TRISB 000F93  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                           _hours 003D  
                         _month 0039               __end_of_I2C_Start 11A8                  __pbitbssCOMRAM 01F0  
             __end_of_I2C_Write 1174                           tablat 000FF5                           status 000FD8  
                __CFG_ICPRT$OFF 000000                  __CFG_PBADEN$ON 000000                 __initialization 1030  
          Reloj_Calendario@Date 0001            Reloj_Calendario@Time 0012                    __end_of_main 0AFA  
                     ??_I2C_Ack 0021                __end_of_Parpadeo 113C                          ??_main 0036  
             __end_of_LCD_Begin 0D8C                   __activetblptr 000002                       ??_LCD_Cmd 0023  
             __end_of_LCD_Print 0CD8                    ??_I2C_NO_Ack 0021                          _ADCON1 000FC1  
              ___awdiv@dividend 0021                     _Anti_rebote 109E                          _OSCCON 000FD3  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                  __CFG_XINST$OFF 000000  
                     ??___awdiv 0025              __end_of_I2C_NO_Ack 118C                  __CFG_STVREN$ON 000000  
                     ??___awmod 0025                       ??___lldiv 0029                          clear_0 1058  
              ___awdiv@quotient 0027                 ___awmod@divisor 0023                 ___awmod@counter 0025  
                  __pdataCOMRAM 0001                       ?_I2C_Init 002E                       ?_I2C_Read 0021  
                     ?_I2C_Stop 0021                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8          __size_of_Decimal_a_BCD 0036  
        __size_of_BCD_a_Decimal 0016                      __accesstop 0060         __end_of__initialization 105E  
                     ?_LCD_Goto 0024                       ?_LCD_PutC 0021       __size_of_Reloj_Calendario 017E  
                 ___rparam_used 000001                  __pcstackCOMRAM 0021           _Establecer_Hora_Fecha 0AFA  
                LCD_Cmd@Command 0023              I2C_Init@frecuencia 002E                      ??_I2C_Init 0032  
                    ??_I2C_Read 0021                      ??_I2C_Stop 0021  Establecer_Hora_Fecha@parametro 002A  
                    ??_LCD_Goto 0025                      ??_LCD_PutC 0023                       ?_Parpadeo 0021  
                 _Decimal_a_BCD 1068       __size_of_LCD_Write_Nibble 008C                         _I2C_Ack 118C  
                 _BCD_a_Decimal 113C                   ??_I2C_ReStart 0021                         _LCD_Cmd 10D2  
        Establecer_Hora_Fecha@x 002C          Establecer_Hora_Fecha@y 0029                         _SSPCON2 000FC5  
               __CFG_VREGEN$OFF 000000                      ??_Parpadeo 0021                       _I2C_Start 11A0  
                     _I2C_Write 1166                  ?_Decimal_a_BCD 0021                         __Hparam 0000  
                       __Lparam 0000          ?_Establecer_Hora_Fecha 0029                LCD_PutC@LCD_Char 0023  
                       ___awdiv 0E18                         ___awmod 0F1E                         ___lldiv 0E9C  
                ?_BCD_a_Decimal 0021                    __psmallconst 0800                         __pcinit 1030  
                       __ramtop 0800                         __ptext0 0984                         __ptext1 0806  
                       __ptext2 113C                         __ptext3 0CD8                         __ptext4 1166  
                       __ptext5 1198                         __ptext6 11A0                         __ptext7 1174  
                       __ptext8 11A8                         __ptext9 1180                ___awmod@dividend 0021  
                       _minutes 003C                         _seconds 003B             __end_of_I2C_ReStart 11B0  
                     _LCD_Begin 0CD8                       _LCD_Print 0C1C                    ?_Anti_rebote 0021  
          end_of_initialization 105E                   __Lmediumconst 0000                _Reloj_Calendario 0806  
                    ?_I2C_Start 0021                      ?_I2C_Write 0021                 ___lldiv@divisor 0025  
               ___lldiv@counter 002D                         postdec1 000FE5                         postinc0 000FEE  
             LCD_Write_Nibble@n 0022                       _PORTAbits 000F80                       _TRISDbits 000F95  
                    ?_LCD_Begin 0021               __size_of_I2C_Init 0060               __size_of_I2C_Read 000C  
             __size_of_I2C_Stop 0008                      ?_LCD_Print 0023                 ??_Decimal_a_BCD 0029  
             __size_of_LCD_Goto 0042               __size_of_LCD_PutC 0014                 ??_BCD_a_Decimal 0021  
              _LCD_Write_Nibble 0D8C                      LCD_Print@i 0028                   __pidataCOMRAM 10FC  
                   _I2C_ReStart 11A8                       Parpadeo@j 0021             start_initialization 1030  
                   ??_I2C_Start 0021                     ??_I2C_Write 0021               __size_of_Parpadeo 0020  
              __CFG_LPT1OSC$OFF 000000                        ?_I2C_Ack 0021                        ?_LCD_Cmd 0021  
                   __pbssCOMRAM 0037                     ??_LCD_Begin 0024                     ??_LCD_Print 0025  
          __size_of_Anti_rebote 0034         ??_Establecer_Hora_Fecha 002B                        ?___awdiv 0021  
                      ?___awmod 0021                        ?___lldiv 0021                LCD_Print@LCD_Str 0023  
      __end_of_Reloj_Calendario 0984                     __smallconst 0800                        _I2C_Init 0F8E  
                      _I2C_Read 1174                        _I2C_Stop 1198                        _LCD_Goto 0FEE  
                      _LCD_PutC 1152                        _LATDbits 000F8C             Decimal_a_BCD@numero 002B  
                      _PIR1bits 000F9E                __CFG_WDTPS$32768 000000                __size_of_I2C_Ack 000C  
              __size_of_LCD_Cmd 002A                      _I2C_NO_Ack 1180        __end_of_LCD_Write_Nibble 0E18  
                     copy_data0 1044                        _Parpadeo 111C                        __Hrparam 0000  
                      __Lrparam 0000                   I2C_Write@data 0021                __size_of___awdiv 0084  
              __size_of___awmod 0070             BCD_a_Decimal@numero 0022                __size_of___lldiv 0082  
                  ?_I2C_ReStart 0021                    Anti_rebote@i 0023                        __ptext10 0F8E  
                      __ptext11 0E9C                        __ptext20 109E                        __ptext12 118C  
                      __ptext21 1068                        __ptext13 0AFA                        __ptext22 0F1E  
                      __ptext14 111C                        __ptext23 0E18                        __ptext15 1152  
                      __ptext16 0C1C                        __ptext17 0FEE                        __ptext18 10D2  
                      __ptext19 0D8C                   __size_of_main 0176           __end_of_Decimal_a_BCD 109E  
         __end_of_BCD_a_Decimal 1152           __CFG_CPUDIV$OSC1_PLL2 000000                     ?_I2C_NO_Ack 0021  
              ___lldiv@dividend 0021  __size_of_Establecer_Hora_Fecha 0122   __end_of_Establecer_Hora_Fecha 0C1C  
             ?_Reloj_Calendario 0021                ___lldiv@quotient 0029              ??_Reloj_Calendario 0029  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                   ??_Anti_rebote 0021  
