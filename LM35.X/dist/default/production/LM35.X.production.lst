

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Oct 08 10:53:35 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.41
    20                           ; Generated 25/01/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _PORTD	set	3971
    54  0000                     _ADRESL	set	4035
    55  0000                     _ADRESH	set	4036
    56  0000                     _ADCON0bits	set	4034
    57  0000                     _ADCON2bits	set	4032
    58  0000                     _ADCON1bits	set	4033
    59  0000                     _TRISD	set	3989
    60  0000                     _TRISA1	set	31889
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  007A58                     __pcinit:
    66                           	opt stack 0
    67  007A58                     start_initialization:
    68                           	opt stack 0
    69  007A58                     __initialization:
    70                           	opt stack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (7 bytes)
    73  007A58  EE00  F029         	lfsr	0,__pbssCOMRAM
    74  007A5C  0E07               	movlw	7
    75  007A5E                     clear_0:
    76  007A5E  6AEE               	clrf	postinc0,c
    77  007A60  06E8               	decf	wreg,f,c
    78  007A62  E1FD               	bnz	clear_0
    79  007A64                     end_of_initialization:
    80                           	opt stack 0
    81  007A64                     __end_of__initialization:
    82                           	opt stack 0
    83  007A64  0100               	movlb	0
    84  007A66  EF7F  F03F         	goto	_main	;jump to C main() function
    85                           postinc0	equ	0xFEE
    86                           wreg	equ	0xFE8
    87                           
    88                           	psect	bssCOMRAM
    89  000029                     __pbssCOMRAM:
    90                           	opt stack 0
    91  000029                     _temp:
    92                           	opt stack 0
    93  000029                     	ds	3
    94  00002C                     _value_adc:
    95                           	opt stack 0
    96  00002C                     	ds	2
    97  00002E                     _lm35:
    98                           	opt stack 0
    99  00002E                     	ds	1
   100  00002F                     _counter_digito:
   101                           	opt stack 0
   102  00002F                     	ds	1
   103                           postinc0	equ	0xFEE
   104                           wreg	equ	0xFE8
   105                           
   106                           	psect	cstackCOMRAM
   107  000001                     __pcstackCOMRAM:
   108                           	opt stack 0
   109  000001                     ?___awdiv:
   110                           	opt stack 0
   111  000001                     ?___awmod:
   112                           	opt stack 0
   113  000001                     ?___ftpack:
   114                           	opt stack 0
   115  000001                     ?___fttol:
   116                           	opt stack 0
   117  000001                     ___awdiv@dividend:
   118                           	opt stack 0
   119  000001                     ___awmod@dividend:
   120                           	opt stack 0
   121  000001                     ___ftpack@arg:
   122                           	opt stack 0
   123  000001                     ___fttol@f1:
   124                           	opt stack 0
   125                           
   126                           ; 3 bytes @ 0x0
   127  000001                     	ds	2
   128  000003                     ___awdiv@divisor:
   129                           	opt stack 0
   130  000003                     ___awmod@divisor:
   131                           	opt stack 0
   132                           
   133                           ; 2 bytes @ 0x2
   134  000003                     	ds	1
   135  000004                     ___ftpack@exp:
   136                           	opt stack 0
   137                           
   138                           ; 1 bytes @ 0x3
   139  000004                     	ds	1
   140  000005                     ??___fttol:
   141  000005                     ___awdiv@counter:
   142                           	opt stack 0
   143  000005                     ___awmod@counter:
   144                           	opt stack 0
   145  000005                     ___ftpack@sign:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x4
   149  000005                     	ds	1
   150  000006                     ??___ftpack:
   151  000006                     ___awdiv@sign:
   152                           	opt stack 0
   153  000006                     ___awmod@sign:
   154                           	opt stack 0
   155                           
   156                           ; 1 bytes @ 0x5
   157  000006                     	ds	1
   158  000007                     ___awdiv@quotient:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x6
   162  000007                     	ds	2
   163  000009                     ?___ftmul:
   164                           	opt stack 0
   165  000009                     ?___lwtoft:
   166                           	opt stack 0
   167  000009                     ___lwtoft@c:
   168                           	opt stack 0
   169  000009                     ___ftmul@f1:
   170                           	opt stack 0
   171                           
   172                           ; 3 bytes @ 0x8
   173  000009                     	ds	1
   174  00000A                     ___fttol@sign1:
   175                           	opt stack 0
   176                           
   177                           ; 1 bytes @ 0x9
   178  00000A                     	ds	1
   179  00000B                     ___fttol@lval:
   180                           	opt stack 0
   181                           
   182                           ; 4 bytes @ 0xA
   183  00000B                     	ds	1
   184  00000C                     ___ftmul@f2:
   185                           	opt stack 0
   186                           
   187                           ; 3 bytes @ 0xB
   188  00000C                     	ds	3
   189  00000F                     ??___ftmul:
   190  00000F                     ___fttol@exp1:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0xE
   194  00000F                     	ds	3
   195  000012                     ___ftmul@exp:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0x11
   199  000012                     	ds	1
   200  000013                     ___ftmul@f3_as_product:
   201                           	opt stack 0
   202                           
   203                           ; 3 bytes @ 0x12
   204  000013                     	ds	3
   205  000016                     ___ftmul@cntr:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x15
   209  000016                     	ds	1
   210  000017                     ___ftmul@sign:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x16
   214  000017                     	ds	1
   215  000018                     ?___ftdiv:
   216                           	opt stack 0
   217  000018                     ___ftdiv@f1:
   218                           	opt stack 0
   219                           
   220                           ; 3 bytes @ 0x17
   221  000018                     	ds	3
   222  00001B                     ___ftdiv@f2:
   223                           	opt stack 0
   224                           
   225                           ; 3 bytes @ 0x1A
   226  00001B                     	ds	3
   227  00001E                     ??___ftdiv:
   228                           
   229                           ; 1 bytes @ 0x1D
   230  00001E                     	ds	3
   231  000021                     ___ftdiv@cntr:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x20
   235  000021                     	ds	1
   236  000022                     ___ftdiv@f3:
   237                           	opt stack 0
   238                           
   239                           ; 3 bytes @ 0x21
   240  000022                     	ds	3
   241  000025                     ___ftdiv@exp:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x24
   245  000025                     	ds	1
   246  000026                     ___ftdiv@sign:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x25
   250  000026                     	ds	1
   251  000027                     ??_main:
   252                           
   253                           ; 1 bytes @ 0x26
   254  000027                     	ds	2
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 12 in file "LM35.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;		None
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, status,2, status,0, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   277 ;;      Params:         0       0       0       0       0       0       0       0       0
   278 ;;      Locals:         0       0       0       0       0       0       0       0       0
   279 ;;      Temps:          2       0       0       0       0       0       0       0       0
   280 ;;      Totals:         2       0       0       0       0       0       0       0       0
   281 ;;Total ram usage:        2 bytes
   282 ;; Hardware stack levels required when called:    2
   283 ;; This function calls:
   284 ;;		___awdiv
   285 ;;		___awmod
   286 ;;		___ftdiv
   287 ;;		___ftmul
   288 ;;		___fttol
   289 ;;		___lwtoft
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296  007EFE                     __ptext0:
   297                           	opt stack 0
   298  007EFE                     _main:
   299                           	opt stack 29
   300                           
   301                           ;LM35.c: 13: TRISD = 0x00;
   302                           
   303                           ;incstack = 0
   304  007EFE  0E00               	movlw	0
   305  007F00  6E95               	movwf	3989,c	;volatile
   306                           
   307                           ;LM35.c: 14: TRISA1 = 1;
   308  007F02  8292               	bsf	3986,1,c	;volatile
   309                           
   310                           ;LM35.c: 15: ADCON1bits.PCFG = 0xD;
   311  007F04  50C1               	movf	4033,w,c	;volatile
   312  007F06  0BF0               	andlw	-16
   313  007F08  090D               	iorlw	13
   314  007F0A  6EC1               	movwf	4033,c	;volatile
   315                           
   316                           ;LM35.c: 16: ADCON2bits.ADFM = 1;
   317  007F0C  8EC0               	bsf	4032,7,c	;volatile
   318                           
   319                           ;LM35.c: 17: ADCON1bits.VCFG0 = 0;
   320  007F0E  98C1               	bcf	4033,4,c	;volatile
   321                           
   322                           ;LM35.c: 18: ADCON1bits.VCFG1 = 0;
   323  007F10  9AC1               	bcf	4033,5,c	;volatile
   324                           
   325                           ;LM35.c: 19: ADCON0bits.CHS = 0b0000;
   326  007F12  94C2               	bcf	4034,2,c	;volatile
   327  007F14  96C2               	bcf	4034,3,c	;volatile
   328  007F16  98C2               	bcf	4034,4,c	;volatile
   329  007F18  9AC2               	bcf	4034,5,c	;volatile
   330                           
   331                           ;LM35.c: 20: ADCON2bits.ADCS = 0b01;
   332  007F1A  50C0               	movf	4032,w,c	;volatile
   333  007F1C  0BF8               	andlw	-8
   334  007F1E  0901               	iorlw	1
   335  007F20  6EC0               	movwf	4032,c	;volatile
   336                           
   337                           ;LM35.c: 22: ADCON0bits.ADON = 1;
   338  007F22  80C2               	bsf	4034,0,c	;volatile
   339                           
   340                           ;LM35.c: 23: _delay((unsigned long)((30)*(8000000/4000000.0)));
   341  007F24  0E14               	movlw	20
   342  007F26                     u817:
   343  007F26  2EE8               	decfsz	wreg,f,c
   344  007F28  D7FE               	bra	u817
   345  007F2A                     l1203:
   346                           
   347                           ;LM35.c: 27: ADCON0bits.GO_DONE = 1;
   348  007F2A  82C2               	bsf	4034,1,c	;volatile
   349  007F2C                     l30:
   350  007F2C  B2C2               	btfsc	4034,1,c	;volatile
   351  007F2E  D7FE               	goto	l30
   352                           
   353                           ;LM35.c: 29: value_adc = ADRESH;
   354  007F30  CFC4 F02C          	movff	4036,_value_adc	;volatile
   355  007F34  6A2D               	clrf	_value_adc+1,c
   356                           
   357                           ;LM35.c: 30: value_adc = (value_adc << 8) + ADRESL;
   358  007F36  502C               	movf	_value_adc,w,c
   359  007F38  6E27               	movwf	??_main& (0+255),c
   360  007F3A  50C3               	movf	4035,w,c	;volatile
   361  007F3C  6E2C               	movwf	_value_adc,c
   362  007F3E  C027  F02D         	movff	??_main,_value_adc+1
   363                           
   364                           ;LM35.c: 31: temp = value_adc;
   365  007F42  C02C  F009         	movff	_value_adc,___lwtoft@c
   366  007F46  C02D  F00A         	movff	_value_adc+1,___lwtoft@c+1
   367  007F4A  EC35  F03D         	call	___lwtoft	;wreg free
   368  007F4E  C009  F029         	movff	?___lwtoft,_temp
   369  007F52  C00A  F02A         	movff	?___lwtoft+1,_temp+1
   370  007F56  C00B  F02B         	movff	?___lwtoft+2,_temp+2
   371                           
   372                           ;LM35.c: 32: temp = (temp * 500.0) / 1023.0;
   373  007F5A  0E00               	movlw	0
   374  007F5C  6E0C               	movwf	___ftmul@f2,c
   375  007F5E  0EFA               	movlw	250
   376  007F60  6E0D               	movwf	___ftmul@f2+1,c
   377  007F62  0E43               	movlw	67
   378  007F64  6E0E               	movwf	___ftmul@f2+2,c
   379  007F66  C029  F009         	movff	_temp,___ftmul@f1
   380  007F6A  C02A  F00A         	movff	_temp+1,___ftmul@f1+1
   381  007F6E  C02B  F00B         	movff	_temp+2,___ftmul@f1+2
   382  007F72  EC8B  F03E         	call	___ftmul	;wreg free
   383  007F76  C009  F018         	movff	?___ftmul,___ftdiv@f1
   384  007F7A  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
   385  007F7E  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
   386  007F82  0EC0               	movlw	192
   387  007F84  6E1B               	movwf	___ftdiv@f2,c
   388  007F86  0E7F               	movlw	127
   389  007F88  6E1C               	movwf	___ftdiv@f2+1,c
   390  007F8A  0E44               	movlw	68
   391  007F8C  6E1D               	movwf	___ftdiv@f2+2,c
   392  007F8E  EC18  F03E         	call	___ftdiv	;wreg free
   393  007F92  C018  F029         	movff	?___ftdiv,_temp
   394  007F96  C019  F02A         	movff	?___ftdiv+1,_temp+1
   395  007F9A  C01A  F02B         	movff	?___ftdiv+2,_temp+2
   396                           
   397                           ;LM35.c: 33: lm35 = (char) temp;
   398  007F9E  C029  F001         	movff	_temp,___fttol@f1
   399  007FA2  C02A  F002         	movff	_temp+1,___fttol@f1+1
   400  007FA6  C02B  F003         	movff	_temp+2,___fttol@f1+2
   401  007FAA  EC05  F03F         	call	___fttol	;wreg free
   402  007FAE  5001               	movf	?___fttol,w,c
   403  007FB0  6E2E               	movwf	_lm35,c
   404                           
   405                           ;LM35.c: 34: PORTD = (1 << 4) + (lm35 % 10);
   406  007FB2  C02E  F001         	movff	_lm35,___awmod@dividend
   407  007FB6  6A02               	clrf	___awmod@dividend+1,c
   408  007FB8  0E00               	movlw	0
   409  007FBA  6E04               	movwf	___awmod@divisor+1,c
   410  007FBC  0E0A               	movlw	10
   411  007FBE  6E03               	movwf	___awmod@divisor,c
   412  007FC0  EC47  F03D         	call	___awmod	;wreg free
   413  007FC4  5001               	movf	?___awmod,w,c
   414  007FC6  0F10               	addlw	16
   415  007FC8  6E83               	movwf	3971,c	;volatile
   416                           
   417                           ;LM35.c: 35: _delay((unsigned long)((50)*(8000000/4000.0)));
   418  007FCA  0E82               	movlw	130
   419  007FCC  6E27               	movwf	??_main& (0+255),c
   420  007FCE  0EDE               	movlw	222
   421  007FD0                     u827:
   422  007FD0  2EE8               	decfsz	wreg,f,c
   423  007FD2  D7FE               	bra	u827
   424  007FD4  2E27               	decfsz	??_main& (0+255),f,c
   425  007FD6  D7FC               	bra	u827
   426                           
   427                           ;LM35.c: 36: PORTD = (1 << 5) + (lm35 / 10);
   428  007FD8  C02E  F001         	movff	_lm35,___awdiv@dividend
   429  007FDC  6A02               	clrf	___awdiv@dividend+1,c
   430  007FDE  0E00               	movlw	0
   431  007FE0  6E04               	movwf	___awdiv@divisor+1,c
   432  007FE2  0E0A               	movlw	10
   433  007FE4  6E03               	movwf	___awdiv@divisor,c
   434  007FE6  EC7F  F03D         	call	___awdiv	;wreg free
   435  007FEA  5001               	movf	?___awdiv,w,c
   436  007FEC  0F20               	addlw	32
   437  007FEE  6E83               	movwf	3971,c	;volatile
   438                           
   439                           ;LM35.c: 37: _delay((unsigned long)((50)*(8000000/4000.0)));
   440  007FF0  0E82               	movlw	130
   441  007FF2  6E27               	movwf	??_main& (0+255),c
   442  007FF4  0EDE               	movlw	222
   443  007FF6                     u837:
   444  007FF6  2EE8               	decfsz	wreg,f,c
   445  007FF8  D7FE               	bra	u837
   446  007FFA  2E27               	decfsz	??_main& (0+255),f,c
   447  007FFC  D7FC               	bra	u837
   448  007FFE  D795               	goto	l1203
   449  008000                     __end_of_main:
   450                           	opt stack 0
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           
   454 ;; *************** function ___lwtoft *****************
   455 ;; Defined at:
   456 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;  c               2    8[COMRAM] unsigned int 
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  3    8[COMRAM] float 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   470 ;;      Params:         3       0       0       0       0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0
   473 ;;      Totals:         3       0       0       0       0       0       0       0       0
   474 ;;Total ram usage:        3 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    1
   477 ;; This function calls:
   478 ;;		___ftpack
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text1
   485  007A6A                     __ptext1:
   486                           	opt stack 0
   487  007A6A                     ___lwtoft:
   488                           	opt stack 29
   489                           
   490                           ;incstack = 0
   491  007A6A  C009  F001         	movff	___lwtoft@c,___ftpack@arg
   492  007A6E  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
   493  007A72  6A03               	clrf	___ftpack@arg+2,c
   494  007A74  0E8E               	movlw	142
   495  007A76  6E04               	movwf	___ftpack@exp,c
   496  007A78  0E00               	movlw	0
   497  007A7A  6E05               	movwf	___ftpack@sign,c
   498  007A7C  ECC1  F03D         	call	___ftpack	;wreg free
   499  007A80  C001  F009         	movff	?___ftpack,?___lwtoft
   500  007A84  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
   501  007A88  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
   502  007A8C  0012               	return	
   503  007A8E                     __end_of___lwtoft:
   504                           	opt stack 0
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           
   508 ;; *************** function ___fttol *****************
   509 ;; Defined at:
   510 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  f1              3    0[COMRAM] float 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  lval            4   10[COMRAM] unsigned long 
   515 ;;  exp1            1   14[COMRAM] unsigned char 
   516 ;;  sign1           1    9[COMRAM] unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  4    0[COMRAM] long 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   526 ;;      Params:         4       0       0       0       0       0       0       0       0
   527 ;;      Locals:         6       0       0       0       0       0       0       0       0
   528 ;;      Temps:          5       0       0       0       0       0       0       0       0
   529 ;;      Totals:        15       0       0       0       0       0       0       0       0
   530 ;;Total ram usage:       15 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text2
   540  007E0A                     __ptext2:
   541                           	opt stack 0
   542  007E0A                     ___fttol:
   543                           	opt stack 30
   544                           
   545                           ;incstack = 0
   546  007E0A  C003  F005         	movff	___fttol@f1+2,??___fttol
   547  007E0E  6A06               	clrf	(??___fttol+1)& (0+255),c
   548  007E10  6A07               	clrf	(??___fttol+2)& (0+255),c
   549  007E12  3402               	rlcf	___fttol@f1+1,w,c
   550  007E14  3605               	rlcf	??___fttol& (0+255),f,c
   551  007E16  E301               	bnc	u721
   552  007E18  8006               	bsf	(??___fttol+1)& (0+255),0,c
   553  007E1A                     u721:
   554  007E1A  5005               	movf	??___fttol,w,c
   555  007E1C  6E0F               	movwf	___fttol@exp1,c
   556  007E1E  500F               	movf	___fttol@exp1,w,c
   557  007E20  A4D8               	btfss	status,2,c
   558  007E22  D009               	goto	l1143
   559  007E24  0E00               	movlw	0
   560  007E26  6E01               	movwf	?___fttol,c
   561  007E28  0E00               	movlw	0
   562  007E2A  6E02               	movwf	?___fttol+1,c
   563  007E2C  0E00               	movlw	0
   564  007E2E  6E03               	movwf	?___fttol+2,c
   565  007E30  0E00               	movlw	0
   566  007E32  6E04               	movwf	?___fttol+3,c
   567  007E34  0012               	return	
   568  007E36                     l1143:
   569  007E36  0E17               	movlw	23
   570  007E38  6E05               	movwf	??___fttol& (0+255),c
   571  007E3A  C001  F006         	movff	___fttol@f1,??___fttol+1
   572  007E3E  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   573  007E42  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   574  007E46  2805               	incf	??___fttol,w,c
   575  007E48  6E09               	movwf	(??___fttol+4)& (0+255),c
   576  007E4A  D004               	goto	u740
   577  007E4C                     u745:
   578  007E4C  90D8               	bcf	status,0,c
   579  007E4E  3208               	rrcf	??___fttol+3,f,c
   580  007E50  3207               	rrcf	??___fttol+2,f,c
   581  007E52  3206               	rrcf	??___fttol+1,f,c
   582  007E54                     u740:
   583  007E54  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   584  007E56  D7FA               	goto	u745
   585  007E58  5006               	movf	??___fttol+1,w,c
   586  007E5A  6E0A               	movwf	___fttol@sign1,c
   587  007E5C  8E02               	bsf	___fttol@f1+1,7,c
   588  007E5E  0EFF               	movlw	255
   589  007E60  1601               	andwf	___fttol@f1,f,c
   590  007E62  0EFF               	movlw	255
   591  007E64  1602               	andwf	___fttol@f1+1,f,c
   592  007E66  0E00               	movlw	0
   593  007E68  1603               	andwf	___fttol@f1+2,f,c
   594  007E6A  5001               	movf	___fttol@f1,w,c
   595  007E6C  6E0B               	movwf	___fttol@lval,c
   596  007E6E  5002               	movf	___fttol@f1+1,w,c
   597  007E70  6E0C               	movwf	___fttol@lval+1,c
   598  007E72  5003               	movf	___fttol@f1+2,w,c
   599  007E74  6E0D               	movwf	___fttol@lval+2,c
   600  007E76  6A0E               	clrf	___fttol@lval+3,c
   601  007E78  0E8E               	movlw	142
   602  007E7A  5E0F               	subwf	___fttol@exp1,f,c
   603  007E7C  AE0F               	btfss	___fttol@exp1,7,c
   604  007E7E  D016               	goto	l1165
   605  007E80  500F               	movf	___fttol@exp1,w,c
   606  007E82  0A80               	xorlw	128
   607  007E84  0F8F               	addlw	143
   608  007E86  B0D8               	btfsc	status,0,c
   609  007E88  D009               	goto	l1161
   610  007E8A  0E00               	movlw	0
   611  007E8C  6E01               	movwf	?___fttol,c
   612  007E8E  0E00               	movlw	0
   613  007E90  6E02               	movwf	?___fttol+1,c
   614  007E92  0E00               	movlw	0
   615  007E94  6E03               	movwf	?___fttol+2,c
   616  007E96  0E00               	movlw	0
   617  007E98  6E04               	movwf	?___fttol+3,c
   618  007E9A  0012               	return	
   619  007E9C                     l1161:
   620  007E9C  90D8               	bcf	status,0,c
   621  007E9E  320E               	rrcf	___fttol@lval+3,f,c
   622  007EA0  320D               	rrcf	___fttol@lval+2,f,c
   623  007EA2  320C               	rrcf	___fttol@lval+1,f,c
   624  007EA4  320B               	rrcf	___fttol@lval,f,c
   625  007EA6  3E0F               	incfsz	___fttol@exp1,f,c
   626  007EA8  D7F9               	goto	l1161
   627  007EAA  D015               	goto	l1175
   628  007EAC                     l1165:
   629  007EAC  0E17               	movlw	23
   630  007EAE  640F               	cpfsgt	___fttol@exp1,c
   631  007EB0  D00F               	goto	l1173
   632  007EB2  0E00               	movlw	0
   633  007EB4  6E01               	movwf	?___fttol,c
   634  007EB6  0E00               	movlw	0
   635  007EB8  6E02               	movwf	?___fttol+1,c
   636  007EBA  0E00               	movlw	0
   637  007EBC  6E03               	movwf	?___fttol+2,c
   638  007EBE  0E00               	movlw	0
   639  007EC0  6E04               	movwf	?___fttol+3,c
   640  007EC2  0012               	return	
   641  007EC4                     l1171:
   642  007EC4  90D8               	bcf	status,0,c
   643  007EC6  360B               	rlcf	___fttol@lval,f,c
   644  007EC8  360C               	rlcf	___fttol@lval+1,f,c
   645  007ECA  360D               	rlcf	___fttol@lval+2,f,c
   646  007ECC  360E               	rlcf	___fttol@lval+3,f,c
   647  007ECE  060F               	decf	___fttol@exp1,f,c
   648  007ED0                     l1173:
   649  007ED0  500F               	movf	___fttol@exp1,w,c
   650  007ED2  A4D8               	btfss	status,2,c
   651  007ED4  D7F7               	goto	l1171
   652  007ED6                     l1175:
   653  007ED6  500A               	movf	___fttol@sign1,w,c
   654  007ED8  B4D8               	btfsc	status,2,c
   655  007EDA  D008               	goto	l1179
   656  007EDC  1E0E               	comf	___fttol@lval+3,f,c
   657  007EDE  1E0D               	comf	___fttol@lval+2,f,c
   658  007EE0  1E0C               	comf	___fttol@lval+1,f,c
   659  007EE2  6C0B               	negf	___fttol@lval,c
   660  007EE4  0E00               	movlw	0
   661  007EE6  220C               	addwfc	___fttol@lval+1,f,c
   662  007EE8  220D               	addwfc	___fttol@lval+2,f,c
   663  007EEA  220E               	addwfc	___fttol@lval+3,f,c
   664  007EEC                     l1179:
   665  007EEC  C00B  F001         	movff	___fttol@lval,?___fttol
   666  007EF0  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   667  007EF4  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   668  007EF8  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   669  007EFC  0012               	return	
   670  007EFE                     __end_of___fttol:
   671                           	opt stack 0
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           status	equ	0xFD8
   675                           
   676 ;; *************** function ___ftmul *****************
   677 ;; Defined at:
   678 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  f1              3    8[COMRAM] float 
   681 ;;  f2              3   11[COMRAM] float 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  f3_as_produc    3   18[COMRAM] unsigned um
   684 ;;  sign            1   22[COMRAM] unsigned char 
   685 ;;  cntr            1   21[COMRAM] unsigned char 
   686 ;;  exp             1   17[COMRAM] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  3    8[COMRAM] float 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         6       0       0       0       0       0       0       0       0
   697 ;;      Locals:         6       0       0       0       0       0       0       0       0
   698 ;;      Temps:          3       0       0       0       0       0       0       0       0
   699 ;;      Totals:        15       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:       15 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    1
   703 ;; This function calls:
   704 ;;		___ftpack
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text3
   711  007D16                     __ptext3:
   712                           	opt stack 0
   713  007D16                     ___ftmul:
   714                           	opt stack 29
   715                           
   716                           ;incstack = 0
   717  007D16  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
   718  007D1A  6A10               	clrf	(??___ftmul+1)& (0+255),c
   719  007D1C  6A11               	clrf	(??___ftmul+2)& (0+255),c
   720  007D1E  340A               	rlcf	___ftmul@f1+1,w,c
   721  007D20  360F               	rlcf	??___ftmul& (0+255),f,c
   722  007D22  E301               	bnc	u541
   723  007D24  8010               	bsf	(??___ftmul+1)& (0+255),0,c
   724  007D26                     u541:
   725  007D26  500F               	movf	??___ftmul,w,c
   726  007D28  6E12               	movwf	___ftmul@exp,c
   727  007D2A  5012               	movf	___ftmul@exp,w,c
   728  007D2C  A4D8               	btfss	status,2,c
   729  007D2E  D007               	goto	l1015
   730  007D30  0E00               	movlw	0
   731  007D32  6E09               	movwf	?___ftmul,c
   732  007D34  0E00               	movlw	0
   733  007D36  6E0A               	movwf	?___ftmul+1,c
   734  007D38  0E00               	movlw	0
   735  007D3A  6E0B               	movwf	?___ftmul+2,c
   736  007D3C  0012               	return	
   737  007D3E                     l1015:
   738  007D3E  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
   739  007D42  6A10               	clrf	(??___ftmul+1)& (0+255),c
   740  007D44  6A11               	clrf	(??___ftmul+2)& (0+255),c
   741  007D46  340D               	rlcf	___ftmul@f2+1,w,c
   742  007D48  360F               	rlcf	??___ftmul& (0+255),f,c
   743  007D4A  E301               	bnc	u561
   744  007D4C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
   745  007D4E                     u561:
   746  007D4E  500F               	movf	??___ftmul,w,c
   747  007D50  6E17               	movwf	___ftmul@sign,c
   748  007D52  5017               	movf	___ftmul@sign,w,c
   749  007D54  A4D8               	btfss	status,2,c
   750  007D56  D007               	goto	l1021
   751  007D58  0E00               	movlw	0
   752  007D5A  6E09               	movwf	?___ftmul,c
   753  007D5C  0E00               	movlw	0
   754  007D5E  6E0A               	movwf	?___ftmul+1,c
   755  007D60  0E00               	movlw	0
   756  007D62  6E0B               	movwf	?___ftmul+2,c
   757  007D64  0012               	return	
   758  007D66                     l1021:
   759  007D66  5017               	movf	___ftmul@sign,w,c
   760  007D68  0F7B               	addlw	123
   761  007D6A  2612               	addwf	___ftmul@exp,f,c
   762  007D6C  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
   763  007D70  500E               	movf	___ftmul@f2+2,w,c
   764  007D72  1A17               	xorwf	___ftmul@sign,f,c
   765  007D74  0E80               	movlw	128
   766  007D76  1617               	andwf	___ftmul@sign,f,c
   767  007D78  8E0A               	bsf	___ftmul@f1+1,7,c
   768  007D7A  8E0D               	bsf	___ftmul@f2+1,7,c
   769  007D7C  0EFF               	movlw	255
   770  007D7E  160C               	andwf	___ftmul@f2,f,c
   771  007D80  0EFF               	movlw	255
   772  007D82  160D               	andwf	___ftmul@f2+1,f,c
   773  007D84  0E00               	movlw	0
   774  007D86  160E               	andwf	___ftmul@f2+2,f,c
   775  007D88  0E00               	movlw	0
   776  007D8A  6E13               	movwf	___ftmul@f3_as_product,c
   777  007D8C  0E00               	movlw	0
   778  007D8E  6E14               	movwf	___ftmul@f3_as_product+1,c
   779  007D90  0E00               	movlw	0
   780  007D92  6E15               	movwf	___ftmul@f3_as_product+2,c
   781  007D94  0E07               	movlw	7
   782  007D96  6E16               	movwf	___ftmul@cntr,c
   783  007D98                     l1035:
   784  007D98  A009               	btfss	___ftmul@f1,0,c
   785  007D9A  D006               	goto	l1039
   786  007D9C  500C               	movf	___ftmul@f2,w,c
   787  007D9E  2613               	addwf	___ftmul@f3_as_product,f,c
   788  007DA0  500D               	movf	___ftmul@f2+1,w,c
   789  007DA2  2214               	addwfc	___ftmul@f3_as_product+1,f,c
   790  007DA4  500E               	movf	___ftmul@f2+2,w,c
   791  007DA6  2215               	addwfc	___ftmul@f3_as_product+2,f,c
   792  007DA8                     l1039:
   793  007DA8  90D8               	bcf	status,0,c
   794  007DAA  320B               	rrcf	___ftmul@f1+2,f,c
   795  007DAC  320A               	rrcf	___ftmul@f1+1,f,c
   796  007DAE  3209               	rrcf	___ftmul@f1,f,c
   797  007DB0  90D8               	bcf	status,0,c
   798  007DB2  360C               	rlcf	___ftmul@f2,f,c
   799  007DB4  360D               	rlcf	___ftmul@f2+1,f,c
   800  007DB6  360E               	rlcf	___ftmul@f2+2,f,c
   801  007DB8  2E16               	decfsz	___ftmul@cntr,f,c
   802  007DBA  D7EE               	goto	l1035
   803  007DBC  0E09               	movlw	9
   804  007DBE  6E16               	movwf	___ftmul@cntr,c
   805  007DC0                     l1045:
   806  007DC0  A009               	btfss	___ftmul@f1,0,c
   807  007DC2  D006               	goto	l1049
   808  007DC4  500C               	movf	___ftmul@f2,w,c
   809  007DC6  2613               	addwf	___ftmul@f3_as_product,f,c
   810  007DC8  500D               	movf	___ftmul@f2+1,w,c
   811  007DCA  2214               	addwfc	___ftmul@f3_as_product+1,f,c
   812  007DCC  500E               	movf	___ftmul@f2+2,w,c
   813  007DCE  2215               	addwfc	___ftmul@f3_as_product+2,f,c
   814  007DD0                     l1049:
   815  007DD0  90D8               	bcf	status,0,c
   816  007DD2  320B               	rrcf	___ftmul@f1+2,f,c
   817  007DD4  320A               	rrcf	___ftmul@f1+1,f,c
   818  007DD6  3209               	rrcf	___ftmul@f1,f,c
   819  007DD8  90D8               	bcf	status,0,c
   820  007DDA  3215               	rrcf	___ftmul@f3_as_product+2,f,c
   821  007DDC  3214               	rrcf	___ftmul@f3_as_product+1,f,c
   822  007DDE  3213               	rrcf	___ftmul@f3_as_product,f,c
   823  007DE0  2E16               	decfsz	___ftmul@cntr,f,c
   824  007DE2  D7EE               	goto	l1045
   825  007DE4  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
   826  007DE8  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
   827  007DEC  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
   828  007DF0  C012  F004         	movff	___ftmul@exp,___ftpack@exp
   829  007DF4  C017  F005         	movff	___ftmul@sign,___ftpack@sign
   830  007DF8  ECC1  F03D         	call	___ftpack	;wreg free
   831  007DFC  C001  F009         	movff	?___ftpack,?___ftmul
   832  007E00  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
   833  007E04  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
   834  007E08  0012               	return	
   835  007E0A                     __end_of___ftmul:
   836                           	opt stack 0
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           status	equ	0xFD8
   840                           
   841 ;; *************** function ___ftdiv *****************
   842 ;; Defined at:
   843 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  f1              3   23[COMRAM] float 
   846 ;;  f2              3   26[COMRAM] float 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  f3              3   33[COMRAM] float 
   849 ;;  sign            1   37[COMRAM] unsigned char 
   850 ;;  exp             1   36[COMRAM] unsigned char 
   851 ;;  cntr            1   32[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  3   23[COMRAM] float 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         6       0       0       0       0       0       0       0       0
   862 ;;      Locals:         6       0       0       0       0       0       0       0       0
   863 ;;      Temps:          3       0       0       0       0       0       0       0       0
   864 ;;      Totals:        15       0       0       0       0       0       0       0       0
   865 ;;Total ram usage:       15 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    1
   868 ;; This function calls:
   869 ;;		___ftpack
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text4
   876  007C30                     __ptext4:
   877                           	opt stack 0
   878  007C30                     ___ftdiv:
   879                           	opt stack 29
   880                           
   881                           ;incstack = 0
   882  007C30  C01A  F01E         	movff	___ftdiv@f1+2,??___ftdiv
   883  007C34  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
   884  007C36  6A20               	clrf	(??___ftdiv+2)& (0+255),c
   885  007C38  3419               	rlcf	___ftdiv@f1+1,w,c
   886  007C3A  361E               	rlcf	??___ftdiv& (0+255),f,c
   887  007C3C  E301               	bnc	u491
   888  007C3E  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
   889  007C40                     u491:
   890  007C40  501E               	movf	??___ftdiv,w,c
   891  007C42  6E25               	movwf	___ftdiv@exp,c
   892  007C44  5025               	movf	___ftdiv@exp,w,c
   893  007C46  A4D8               	btfss	status,2,c
   894  007C48  D007               	goto	l969
   895  007C4A  0E00               	movlw	0
   896  007C4C  6E18               	movwf	?___ftdiv,c
   897  007C4E  0E00               	movlw	0
   898  007C50  6E19               	movwf	?___ftdiv+1,c
   899  007C52  0E00               	movlw	0
   900  007C54  6E1A               	movwf	?___ftdiv+2,c
   901  007C56  0012               	return	
   902  007C58                     l969:
   903  007C58  C01D  F01E         	movff	___ftdiv@f2+2,??___ftdiv
   904  007C5C  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
   905  007C5E  6A20               	clrf	(??___ftdiv+2)& (0+255),c
   906  007C60  341C               	rlcf	___ftdiv@f2+1,w,c
   907  007C62  361E               	rlcf	??___ftdiv& (0+255),f,c
   908  007C64  E301               	bnc	u511
   909  007C66  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
   910  007C68                     u511:
   911  007C68  501E               	movf	??___ftdiv,w,c
   912  007C6A  6E26               	movwf	___ftdiv@sign,c
   913  007C6C  5026               	movf	___ftdiv@sign,w,c
   914  007C6E  A4D8               	btfss	status,2,c
   915  007C70  D007               	goto	l975
   916  007C72  0E00               	movlw	0
   917  007C74  6E18               	movwf	?___ftdiv,c
   918  007C76  0E00               	movlw	0
   919  007C78  6E19               	movwf	?___ftdiv+1,c
   920  007C7A  0E00               	movlw	0
   921  007C7C  6E1A               	movwf	?___ftdiv+2,c
   922  007C7E  0012               	return	
   923  007C80                     l975:
   924  007C80  0E00               	movlw	0
   925  007C82  6E22               	movwf	___ftdiv@f3,c
   926  007C84  0E00               	movlw	0
   927  007C86  6E23               	movwf	___ftdiv@f3+1,c
   928  007C88  0E00               	movlw	0
   929  007C8A  6E24               	movwf	___ftdiv@f3+2,c
   930  007C8C  5026               	movf	___ftdiv@sign,w,c
   931  007C8E  0F89               	addlw	137
   932  007C90  5E25               	subwf	___ftdiv@exp,f,c
   933  007C92  C01A  F026         	movff	___ftdiv@f1+2,___ftdiv@sign
   934  007C96  501D               	movf	___ftdiv@f2+2,w,c
   935  007C98  1A26               	xorwf	___ftdiv@sign,f,c
   936  007C9A  0E80               	movlw	128
   937  007C9C  1626               	andwf	___ftdiv@sign,f,c
   938  007C9E  8E19               	bsf	___ftdiv@f1+1,7,c
   939  007CA0  0EFF               	movlw	255
   940  007CA2  1618               	andwf	___ftdiv@f1,f,c
   941  007CA4  0EFF               	movlw	255
   942  007CA6  1619               	andwf	___ftdiv@f1+1,f,c
   943  007CA8  0E00               	movlw	0
   944  007CAA  161A               	andwf	___ftdiv@f1+2,f,c
   945  007CAC  8E1C               	bsf	___ftdiv@f2+1,7,c
   946  007CAE  0EFF               	movlw	255
   947  007CB0  161B               	andwf	___ftdiv@f2,f,c
   948  007CB2  0EFF               	movlw	255
   949  007CB4  161C               	andwf	___ftdiv@f2+1,f,c
   950  007CB6  0E00               	movlw	0
   951  007CB8  161D               	andwf	___ftdiv@f2+2,f,c
   952  007CBA  0E18               	movlw	24
   953  007CBC  6E21               	movwf	___ftdiv@cntr,c
   954  007CBE                     l995:
   955  007CBE  90D8               	bcf	status,0,c
   956  007CC0  3622               	rlcf	___ftdiv@f3,f,c
   957  007CC2  3623               	rlcf	___ftdiv@f3+1,f,c
   958  007CC4  3624               	rlcf	___ftdiv@f3+2,f,c
   959  007CC6  501B               	movf	___ftdiv@f2,w,c
   960  007CC8  5C18               	subwf	___ftdiv@f1,w,c
   961  007CCA  501C               	movf	___ftdiv@f2+1,w,c
   962  007CCC  5819               	subwfb	___ftdiv@f1+1,w,c
   963  007CCE  501D               	movf	___ftdiv@f2+2,w,c
   964  007CD0  581A               	subwfb	___ftdiv@f1+2,w,c
   965  007CD2  A0D8               	btfss	status,0,c
   966  007CD4  D007               	goto	l318
   967  007CD6  501B               	movf	___ftdiv@f2,w,c
   968  007CD8  5E18               	subwf	___ftdiv@f1,f,c
   969  007CDA  501C               	movf	___ftdiv@f2+1,w,c
   970  007CDC  5A19               	subwfb	___ftdiv@f1+1,f,c
   971  007CDE  501D               	movf	___ftdiv@f2+2,w,c
   972  007CE0  5A1A               	subwfb	___ftdiv@f1+2,f,c
   973  007CE2  8022               	bsf	___ftdiv@f3,0,c
   974  007CE4                     l318:
   975  007CE4  90D8               	bcf	status,0,c
   976  007CE6  3618               	rlcf	___ftdiv@f1,f,c
   977  007CE8  3619               	rlcf	___ftdiv@f1+1,f,c
   978  007CEA  361A               	rlcf	___ftdiv@f1+2,f,c
   979  007CEC  2E21               	decfsz	___ftdiv@cntr,f,c
   980  007CEE  D7E7               	goto	l995
   981  007CF0  C022  F001         	movff	___ftdiv@f3,___ftpack@arg
   982  007CF4  C023  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
   983  007CF8  C024  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
   984  007CFC  C025  F004         	movff	___ftdiv@exp,___ftpack@exp
   985  007D00  C026  F005         	movff	___ftdiv@sign,___ftpack@sign
   986  007D04  ECC1  F03D         	call	___ftpack	;wreg free
   987  007D08  C001  F018         	movff	?___ftpack,?___ftdiv
   988  007D0C  C002  F019         	movff	?___ftpack+1,?___ftdiv+1
   989  007D10  C003  F01A         	movff	?___ftpack+2,?___ftdiv+2
   990  007D14  0012               	return	
   991  007D16                     __end_of___ftdiv:
   992                           	opt stack 0
   993                           postinc0	equ	0xFEE
   994                           wreg	equ	0xFE8
   995                           status	equ	0xFD8
   996                           
   997 ;; *************** function ___ftpack *****************
   998 ;; Defined at:
   999 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  arg             3    0[COMRAM] unsigned um
  1002 ;;  exp             1    3[COMRAM] unsigned char 
  1003 ;;  sign            1    4[COMRAM] unsigned char 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  3    0[COMRAM] float 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1015 ;;      Params:         5       0       0       0       0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1017 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1018 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1019 ;;Total ram usage:        8 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		___ftdiv
  1025 ;;		___ftmul
  1026 ;;		___lwtoft
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text5
  1031  007B82                     __ptext5:
  1032                           	opt stack 0
  1033  007B82                     ___ftpack:
  1034                           	opt stack 29
  1035                           
  1036                           ;incstack = 0
  1037  007B82  5004               	movf	___ftpack@exp,w,c
  1038  007B84  B4D8               	btfsc	status,2,c
  1039  007B86  D005               	goto	l931
  1040  007B88  5001               	movf	___ftpack@arg,w,c
  1041  007B8A  1002               	iorwf	___ftpack@arg+1,w,c
  1042  007B8C  1003               	iorwf	___ftpack@arg+2,w,c
  1043  007B8E  A4D8               	btfss	status,2,c
  1044  007B90  D00C               	goto	l937
  1045  007B92                     l931:
  1046  007B92  0E00               	movlw	0
  1047  007B94  6E01               	movwf	?___ftpack,c
  1048  007B96  0E00               	movlw	0
  1049  007B98  6E02               	movwf	?___ftpack+1,c
  1050  007B9A  0E00               	movlw	0
  1051  007B9C  6E03               	movwf	?___ftpack+2,c
  1052  007B9E  0012               	return	
  1053  007BA0                     l935:
  1054  007BA0  2A04               	incf	___ftpack@exp,f,c
  1055  007BA2  90D8               	bcf	status,0,c
  1056  007BA4  3203               	rrcf	___ftpack@arg+2,f,c
  1057  007BA6  3202               	rrcf	___ftpack@arg+1,f,c
  1058  007BA8  3201               	rrcf	___ftpack@arg,f,c
  1059  007BAA                     l937:
  1060  007BAA  0E00               	movlw	0
  1061  007BAC  1401               	andwf	___ftpack@arg,w,c
  1062  007BAE  6E06               	movwf	??___ftpack& (0+255),c
  1063  007BB0  0E00               	movlw	0
  1064  007BB2  1402               	andwf	___ftpack@arg+1,w,c
  1065  007BB4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1066  007BB6  0EFE               	movlw	254
  1067  007BB8  1403               	andwf	___ftpack@arg+2,w,c
  1068  007BBA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1069  007BBC  5006               	movf	??___ftpack,w,c
  1070  007BBE  1007               	iorwf	??___ftpack+1,w,c
  1071  007BC0  1008               	iorwf	??___ftpack+2,w,c
  1072  007BC2  B4D8               	btfsc	status,2,c
  1073  007BC4  D00C               	goto	l943
  1074  007BC6  D7EC               	goto	l935
  1075  007BC8                     l939:
  1076  007BC8  2A04               	incf	___ftpack@exp,f,c
  1077  007BCA  0E01               	movlw	1
  1078  007BCC  2601               	addwf	___ftpack@arg,f,c
  1079  007BCE  0E00               	movlw	0
  1080  007BD0  2202               	addwfc	___ftpack@arg+1,f,c
  1081  007BD2  0E00               	movlw	0
  1082  007BD4  2203               	addwfc	___ftpack@arg+2,f,c
  1083  007BD6  90D8               	bcf	status,0,c
  1084  007BD8  3203               	rrcf	___ftpack@arg+2,f,c
  1085  007BDA  3202               	rrcf	___ftpack@arg+1,f,c
  1086  007BDC  3201               	rrcf	___ftpack@arg,f,c
  1087  007BDE                     l943:
  1088  007BDE  0E00               	movlw	0
  1089  007BE0  1401               	andwf	___ftpack@arg,w,c
  1090  007BE2  6E06               	movwf	??___ftpack& (0+255),c
  1091  007BE4  0E00               	movlw	0
  1092  007BE6  1402               	andwf	___ftpack@arg+1,w,c
  1093  007BE8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1094  007BEA  0EFF               	movlw	255
  1095  007BEC  1403               	andwf	___ftpack@arg+2,w,c
  1096  007BEE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1097  007BF0  5006               	movf	??___ftpack,w,c
  1098  007BF2  1007               	iorwf	??___ftpack+1,w,c
  1099  007BF4  1008               	iorwf	??___ftpack+2,w,c
  1100  007BF6  B4D8               	btfsc	status,2,c
  1101  007BF8  D006               	goto	l947
  1102  007BFA  D7E6               	goto	l939
  1103  007BFC                     l945:
  1104  007BFC  0604               	decf	___ftpack@exp,f,c
  1105  007BFE  90D8               	bcf	status,0,c
  1106  007C00  3601               	rlcf	___ftpack@arg,f,c
  1107  007C02  3602               	rlcf	___ftpack@arg+1,f,c
  1108  007C04  3603               	rlcf	___ftpack@arg+2,f,c
  1109  007C06                     l947:
  1110  007C06  BE02               	btfsc	___ftpack@arg+1,7,c
  1111  007C08  D003               	goto	l260
  1112  007C0A  0E02               	movlw	2
  1113  007C0C  6004               	cpfslt	___ftpack@exp,c
  1114  007C0E  D7F6               	goto	l945
  1115  007C10                     l260:
  1116  007C10  A004               	btfss	___ftpack@exp,0,c
  1117  007C12  9E02               	bcf	___ftpack@arg+1,7,c
  1118  007C14  90D8               	bcf	status,0,c
  1119  007C16  3204               	rrcf	___ftpack@exp,f,c
  1120  007C18  5004               	movf	___ftpack@exp,w,c
  1121  007C1A  1203               	iorwf	___ftpack@arg+2,f,c
  1122  007C1C  5005               	movf	___ftpack@sign,w,c
  1123  007C1E  A4D8               	btfss	status,2,c
  1124  007C20  8E03               	bsf	___ftpack@arg+2,7,c
  1125  007C22  C001  F001         	movff	___ftpack@arg,?___ftpack
  1126  007C26  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1127  007C2A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1128  007C2E  0012               	return	
  1129  007C30                     __end_of___ftpack:
  1130                           	opt stack 0
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function ___awmod *****************
  1136 ;; Defined at:
  1137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  dividend        2    0[COMRAM] int 
  1140 ;;  divisor         2    2[COMRAM] int 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  sign            1    5[COMRAM] unsigned char 
  1143 ;;  counter         1    4[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2    0[COMRAM] int 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         4       0       0       0       0       0       0       0       0
  1154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        6 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text6
  1167  007A8E                     __ptext6:
  1168                           	opt stack 0
  1169  007A8E                     ___awmod:
  1170                           	opt stack 30
  1171                           
  1172                           ;incstack = 0
  1173  007A8E  0E00               	movlw	0
  1174  007A90  6E06               	movwf	___awmod@sign,c
  1175  007A92  AE02               	btfss	___awmod@dividend+1,7,c
  1176  007A94  D006               	goto	l1109
  1177  007A96  6C01               	negf	___awmod@dividend,c
  1178  007A98  1E02               	comf	___awmod@dividend+1,f,c
  1179  007A9A  B0D8               	btfsc	status,0,c
  1180  007A9C  2A02               	incf	___awmod@dividend+1,f,c
  1181  007A9E  0E01               	movlw	1
  1182  007AA0  6E06               	movwf	___awmod@sign,c
  1183  007AA2                     l1109:
  1184  007AA2  AE04               	btfss	___awmod@divisor+1,7,c
  1185  007AA4  D004               	goto	l1113
  1186  007AA6  6C03               	negf	___awmod@divisor,c
  1187  007AA8  1E04               	comf	___awmod@divisor+1,f,c
  1188  007AAA  B0D8               	btfsc	status,0,c
  1189  007AAC  2A04               	incf	___awmod@divisor+1,f,c
  1190  007AAE                     l1113:
  1191  007AAE  5003               	movf	___awmod@divisor,w,c
  1192  007AB0  1004               	iorwf	___awmod@divisor+1,w,c
  1193  007AB2  B4D8               	btfsc	status,2,c
  1194  007AB4  D018               	goto	l1129
  1195  007AB6  0E01               	movlw	1
  1196  007AB8  6E05               	movwf	___awmod@counter,c
  1197  007ABA  D004               	goto	l1119
  1198  007ABC                     l1117:
  1199  007ABC  90D8               	bcf	status,0,c
  1200  007ABE  3603               	rlcf	___awmod@divisor,f,c
  1201  007AC0  3604               	rlcf	___awmod@divisor+1,f,c
  1202  007AC2  2A05               	incf	___awmod@counter,f,c
  1203  007AC4                     l1119:
  1204  007AC4  AE04               	btfss	___awmod@divisor+1,7,c
  1205  007AC6  D7FA               	goto	l1117
  1206  007AC8                     l1121:
  1207  007AC8  5003               	movf	___awmod@divisor,w,c
  1208  007ACA  5C01               	subwf	___awmod@dividend,w,c
  1209  007ACC  5004               	movf	___awmod@divisor+1,w,c
  1210  007ACE  5802               	subwfb	___awmod@dividend+1,w,c
  1211  007AD0  A0D8               	btfss	status,0,c
  1212  007AD2  D004               	goto	l1125
  1213  007AD4  5003               	movf	___awmod@divisor,w,c
  1214  007AD6  5E01               	subwf	___awmod@dividend,f,c
  1215  007AD8  5004               	movf	___awmod@divisor+1,w,c
  1216  007ADA  5A02               	subwfb	___awmod@dividend+1,f,c
  1217  007ADC                     l1125:
  1218  007ADC  90D8               	bcf	status,0,c
  1219  007ADE  3204               	rrcf	___awmod@divisor+1,f,c
  1220  007AE0  3203               	rrcf	___awmod@divisor,f,c
  1221  007AE2  2E05               	decfsz	___awmod@counter,f,c
  1222  007AE4  D7F1               	goto	l1121
  1223  007AE6                     l1129:
  1224  007AE6  5006               	movf	___awmod@sign,w,c
  1225  007AE8  B4D8               	btfsc	status,2,c
  1226  007AEA  D004               	goto	l1133
  1227  007AEC  6C01               	negf	___awmod@dividend,c
  1228  007AEE  1E02               	comf	___awmod@dividend+1,f,c
  1229  007AF0  B0D8               	btfsc	status,0,c
  1230  007AF2  2A02               	incf	___awmod@dividend+1,f,c
  1231  007AF4                     l1133:
  1232  007AF4  C001  F001         	movff	___awmod@dividend,?___awmod
  1233  007AF8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1234  007AFC  0012               	return	
  1235  007AFE                     __end_of___awmod:
  1236                           	opt stack 0
  1237                           postinc0	equ	0xFEE
  1238                           wreg	equ	0xFE8
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function ___awdiv *****************
  1242 ;; Defined at:
  1243 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  dividend        2    0[COMRAM] int 
  1246 ;;  divisor         2    2[COMRAM] int 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  quotient        2    6[COMRAM] int 
  1249 ;;  sign            1    5[COMRAM] unsigned char 
  1250 ;;  counter         1    4[COMRAM] unsigned char 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  2    0[COMRAM] int 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:         4       0       0       0       0       0       0       0       0
  1261 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1263 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1264 ;;Total ram usage:        8 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text7
  1274  007AFE                     __ptext7:
  1275                           	opt stack 0
  1276  007AFE                     ___awdiv:
  1277                           	opt stack 30
  1278                           
  1279                           ;incstack = 0
  1280  007AFE  0E00               	movlw	0
  1281  007B00  6E06               	movwf	___awdiv@sign,c
  1282  007B02  AE04               	btfss	___awdiv@divisor+1,7,c
  1283  007B04  D006               	goto	l1065
  1284  007B06  6C03               	negf	___awdiv@divisor,c
  1285  007B08  1E04               	comf	___awdiv@divisor+1,f,c
  1286  007B0A  B0D8               	btfsc	status,0,c
  1287  007B0C  2A04               	incf	___awdiv@divisor+1,f,c
  1288  007B0E  0E01               	movlw	1
  1289  007B10  6E06               	movwf	___awdiv@sign,c
  1290  007B12                     l1065:
  1291  007B12  AE02               	btfss	___awdiv@dividend+1,7,c
  1292  007B14  D006               	goto	l1071
  1293  007B16  6C01               	negf	___awdiv@dividend,c
  1294  007B18  1E02               	comf	___awdiv@dividend+1,f,c
  1295  007B1A  B0D8               	btfsc	status,0,c
  1296  007B1C  2A02               	incf	___awdiv@dividend+1,f,c
  1297  007B1E  0E01               	movlw	1
  1298  007B20  1A06               	xorwf	___awdiv@sign,f,c
  1299  007B22                     l1071:
  1300  007B22  0E00               	movlw	0
  1301  007B24  6E08               	movwf	___awdiv@quotient+1,c
  1302  007B26  0E00               	movlw	0
  1303  007B28  6E07               	movwf	___awdiv@quotient,c
  1304  007B2A  5003               	movf	___awdiv@divisor,w,c
  1305  007B2C  1004               	iorwf	___awdiv@divisor+1,w,c
  1306  007B2E  B4D8               	btfsc	status,2,c
  1307  007B30  D01C               	goto	l1093
  1308  007B32  0E01               	movlw	1
  1309  007B34  6E05               	movwf	___awdiv@counter,c
  1310  007B36  D004               	goto	l1079
  1311  007B38                     l1077:
  1312  007B38  90D8               	bcf	status,0,c
  1313  007B3A  3603               	rlcf	___awdiv@divisor,f,c
  1314  007B3C  3604               	rlcf	___awdiv@divisor+1,f,c
  1315  007B3E  2A05               	incf	___awdiv@counter,f,c
  1316  007B40                     l1079:
  1317  007B40  AE04               	btfss	___awdiv@divisor+1,7,c
  1318  007B42  D7FA               	goto	l1077
  1319  007B44                     l1081:
  1320  007B44  90D8               	bcf	status,0,c
  1321  007B46  3607               	rlcf	___awdiv@quotient,f,c
  1322  007B48  3608               	rlcf	___awdiv@quotient+1,f,c
  1323  007B4A  5003               	movf	___awdiv@divisor,w,c
  1324  007B4C  5C01               	subwf	___awdiv@dividend,w,c
  1325  007B4E  5004               	movf	___awdiv@divisor+1,w,c
  1326  007B50  5802               	subwfb	___awdiv@dividend+1,w,c
  1327  007B52  A0D8               	btfss	status,0,c
  1328  007B54  D005               	goto	l1089
  1329  007B56  5003               	movf	___awdiv@divisor,w,c
  1330  007B58  5E01               	subwf	___awdiv@dividend,f,c
  1331  007B5A  5004               	movf	___awdiv@divisor+1,w,c
  1332  007B5C  5A02               	subwfb	___awdiv@dividend+1,f,c
  1333  007B5E  8007               	bsf	___awdiv@quotient,0,c
  1334  007B60                     l1089:
  1335  007B60  90D8               	bcf	status,0,c
  1336  007B62  3204               	rrcf	___awdiv@divisor+1,f,c
  1337  007B64  3203               	rrcf	___awdiv@divisor,f,c
  1338  007B66  2E05               	decfsz	___awdiv@counter,f,c
  1339  007B68  D7ED               	goto	l1081
  1340  007B6A                     l1093:
  1341  007B6A  5006               	movf	___awdiv@sign,w,c
  1342  007B6C  B4D8               	btfsc	status,2,c
  1343  007B6E  D004               	goto	l1097
  1344  007B70  6C07               	negf	___awdiv@quotient,c
  1345  007B72  1E08               	comf	___awdiv@quotient+1,f,c
  1346  007B74  B0D8               	btfsc	status,0,c
  1347  007B76  2A08               	incf	___awdiv@quotient+1,f,c
  1348  007B78                     l1097:
  1349  007B78  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1350  007B7C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1351  007B80  0012               	return	
  1352  007B82                     __end_of___awdiv:
  1353                           	opt stack 0
  1354  0000                     postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           status	equ	0xFD8
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           status	equ	0xFD8
  1360                           
  1361                           	psect	rparam
  1362  0000                     postinc0	equ	0xFEE
  1363                           wreg	equ	0xFE8
  1364                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftdiv
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6040
                                             38 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1403
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     295
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    1810
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    1764
                                             23 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1338
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     382
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     386
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
   ___lwtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      2F       1       49.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      20        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Oct 08 10:53:35 2021

                     l30 7F2C             ___awdiv@sign 0006              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l260 7C10                      l318 7CE4                      l931 7B92  
                    l943 7BDE                      l935 7BA0                      l945 7BFC  
                    l937 7BAA                      l947 7C06                      l939 7BC8  
                    l975 7C80                      l969 7C58                      l995 7CBE  
           __CFG_CPB$OFF 000000                      u511 7C68             __CFG_CPD$OFF 000000  
                    u541 7D26                      u561 7D4E                      u721 7E1A  
                    u491 7C40                      u740 7E54                      u745 7E4C  
                    u817 7F26                      u827 7FD0                      u837 7FF6  
           ___awmod@sign 0006                      wreg 000FE8             ___ftdiv@cntr 0021  
           ___ftdiv@sign 0026             __CFG_WDT$OFF 000000                     l1021 7D66  
                   l1015 7D3E                     l1121 7AC8                     l1113 7AAE  
                   l1035 7D98                     l1203 7F2A                     l1133 7AF4  
                   l1125 7ADC                     l1117 7ABC                     l1109 7AA2  
                   l1045 7DC0                     l1071 7B22                     l1119 7AC4  
                   l1039 7DA8                     l1143 7E36                     l1081 7B44  
                   l1065 7B12                     l1129 7AE6                     l1049 7DD0  
                   l1161 7E9C                     l1171 7EC4                     l1077 7B38  
                   l1093 7B6A                     l1173 7ED0                     l1165 7EAC  
                   l1079 7B40                     l1175 7ED6                     l1097 7B78  
                   l1089 7B60                     l1179 7EEC                     _lm35 002E  
                   _main 7EFE             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   _temp 0029                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___ftmul@cntr 0016             ___param_bank 000000  
           ___ftmul@sign 0017             ___fttol@exp1 000F             ___fttol@lval 000B  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___awdiv 7B82          __end_of___awmod 7AFE          __end_of___ftdiv 7D16  
        __end_of___ftmul 7E0A          ___awdiv@divisor 0003          __end_of___fttol 7EFE  
        ___awdiv@counter 0005                    _PORTD 000F83            __CFG_USBDIV$1 000000  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
          ___ftpack@sign 0005                    status 000FD8           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000          __initialization 7A58             __end_of_main 8000  
                 ??_main 0027            ___fttol@sign1 000A            __activetblptr 000000  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0001  
       __end_of___ftpack 7C30         __end_of___lwtoft 7A8E                   _TRISA1 007C91  
         __CFG_XINST$OFF 000000                ??___awdiv 0005           __CFG_STVREN$ON 000000  
              ??___awmod 0005                ??___ftdiv 001E                ??___ftmul 000F  
              ??___fttol 0005                   clear_0 7A5E         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005    ___ftmul@f3_as_product 0013  
             __accesstop 0060  __end_of__initialization 7A64            ___rparam_used 000001  
             ___ftdiv@f1 0018               ___ftdiv@f2 001B               ___ftdiv@f3 0022  
             ___ftmul@f1 0009               ___ftmul@f2 000C               ___fttol@f1 0001  
         __pcstackCOMRAM 0001               ___lwtoft@c 0009           _counter_digito 002F  
              ?___ftpack 0001                ?___lwtoft 0009          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7AFE  
                ___awmod 7A8E                  ___ftdiv 7C30                  ___ftmul 7D16  
                ___fttol 7E0A                  __pcinit 7A58               ??___ftpack 0006  
                __ramtop 0800                  __ptext0 7EFE                  __ptext1 7A6A  
                __ptext2 7E0A                  __ptext3 7D16                  __ptext4 7C30  
                __ptext5 7B82                  __ptext6 7A8E                  __ptext7 7AFE  
             ??___lwtoft 000C         ___awmod@dividend 0001     end_of_initialization 7A64  
                postinc0 000FEE              ___ftdiv@exp 0025              ___ftmul@exp 0012  
    start_initialization 7A58         __CFG_LPT1OSC$OFF 000000        __size_of___ftpack 00AE  
            __pbssCOMRAM 0029        __size_of___lwtoft 0024                 ?___awdiv 0001  
               ?___awmod 0001                 ?___ftdiv 0018                 ?___ftmul 0009  
               ?___fttol 0001         __CFG_WDTPS$32768 000000                _value_adc 002C  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 0084  
       __size_of___awmod 0070         __size_of___ftdiv 00E6         __size_of___ftmul 00F4  
       __size_of___fttol 00F4                 ___ftpack 7B82                 ___lwtoft 7A6A  
          __size_of_main 0102    __CFG_CPUDIV$OSC1_PLL2 000000      __CFG_FOSC$INTOSC_HS 000000  
